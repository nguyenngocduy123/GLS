{"version":3,"sources":["../../node_modules/moment/locale ^/.*$","../../src/providers/storage/sql-table.ts","../../src/providers/classes/item.ts","../../src/providers/user/auth-response.ts","../../src/app/app.component.ts","../../src/providers/notification/notification.ts","../../src/providers/driver-rest/driver-rest.ts","../../src/providers/classes/job.ts","../../src/providers/user/user-driver.ts","../../src/providers/storage/storage.ts","../../src/providers/user/auth.ts","../../src/providers/diagnostic/diagnostic.ts","../../src/providers/geolocation/geolocation.ts","../../src/globals.ts","../../src/providers/websocket/websocket.ts","../../src/providers/driver-rest/native-http.ts","../../src/providers/navigation/navigation.ts","../../src/providers/loading/loading.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/classes/note.ts","../../src/providers/current-job/current-job.ts","../../src/providers/camera/camera.ts","../../src/app/main.ts","../../src/app/app.module.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": 677,\n\t\"./af.js\": 677,\n\t\"./ar\": 678,\n\t\"./ar-dz\": 679,\n\t\"./ar-dz.js\": 679,\n\t\"./ar-kw\": 680,\n\t\"./ar-kw.js\": 680,\n\t\"./ar-ly\": 681,\n\t\"./ar-ly.js\": 681,\n\t\"./ar-ma\": 682,\n\t\"./ar-ma.js\": 682,\n\t\"./ar-sa\": 683,\n\t\"./ar-sa.js\": 683,\n\t\"./ar-tn\": 684,\n\t\"./ar-tn.js\": 684,\n\t\"./ar.js\": 678,\n\t\"./az\": 685,\n\t\"./az.js\": 685,\n\t\"./be\": 686,\n\t\"./be.js\": 686,\n\t\"./bg\": 687,\n\t\"./bg.js\": 687,\n\t\"./bm\": 688,\n\t\"./bm.js\": 688,\n\t\"./bn\": 689,\n\t\"./bn.js\": 689,\n\t\"./bo\": 690,\n\t\"./bo.js\": 690,\n\t\"./br\": 691,\n\t\"./br.js\": 691,\n\t\"./bs\": 692,\n\t\"./bs.js\": 692,\n\t\"./ca\": 693,\n\t\"./ca.js\": 693,\n\t\"./cs\": 694,\n\t\"./cs.js\": 694,\n\t\"./cv\": 695,\n\t\"./cv.js\": 695,\n\t\"./cy\": 696,\n\t\"./cy.js\": 696,\n\t\"./da\": 697,\n\t\"./da.js\": 697,\n\t\"./de\": 698,\n\t\"./de-at\": 699,\n\t\"./de-at.js\": 699,\n\t\"./de-ch\": 700,\n\t\"./de-ch.js\": 700,\n\t\"./de.js\": 698,\n\t\"./dv\": 701,\n\t\"./dv.js\": 701,\n\t\"./el\": 702,\n\t\"./el.js\": 702,\n\t\"./en-au\": 703,\n\t\"./en-au.js\": 703,\n\t\"./en-ca\": 704,\n\t\"./en-ca.js\": 704,\n\t\"./en-gb\": 705,\n\t\"./en-gb.js\": 705,\n\t\"./en-ie\": 706,\n\t\"./en-ie.js\": 706,\n\t\"./en-il\": 707,\n\t\"./en-il.js\": 707,\n\t\"./en-nz\": 708,\n\t\"./en-nz.js\": 708,\n\t\"./eo\": 709,\n\t\"./eo.js\": 709,\n\t\"./es\": 710,\n\t\"./es-do\": 711,\n\t\"./es-do.js\": 711,\n\t\"./es-us\": 712,\n\t\"./es-us.js\": 712,\n\t\"./es.js\": 710,\n\t\"./et\": 713,\n\t\"./et.js\": 713,\n\t\"./eu\": 714,\n\t\"./eu.js\": 714,\n\t\"./fa\": 715,\n\t\"./fa.js\": 715,\n\t\"./fi\": 716,\n\t\"./fi.js\": 716,\n\t\"./fo\": 717,\n\t\"./fo.js\": 717,\n\t\"./fr\": 718,\n\t\"./fr-ca\": 719,\n\t\"./fr-ca.js\": 719,\n\t\"./fr-ch\": 720,\n\t\"./fr-ch.js\": 720,\n\t\"./fr.js\": 718,\n\t\"./fy\": 721,\n\t\"./fy.js\": 721,\n\t\"./gd\": 722,\n\t\"./gd.js\": 722,\n\t\"./gl\": 723,\n\t\"./gl.js\": 723,\n\t\"./gom-latn\": 724,\n\t\"./gom-latn.js\": 724,\n\t\"./gu\": 725,\n\t\"./gu.js\": 725,\n\t\"./he\": 726,\n\t\"./he.js\": 726,\n\t\"./hi\": 727,\n\t\"./hi.js\": 727,\n\t\"./hr\": 728,\n\t\"./hr.js\": 728,\n\t\"./hu\": 729,\n\t\"./hu.js\": 729,\n\t\"./hy-am\": 730,\n\t\"./hy-am.js\": 730,\n\t\"./id\": 731,\n\t\"./id.js\": 731,\n\t\"./is\": 732,\n\t\"./is.js\": 732,\n\t\"./it\": 733,\n\t\"./it.js\": 733,\n\t\"./ja\": 734,\n\t\"./ja.js\": 734,\n\t\"./jv\": 735,\n\t\"./jv.js\": 735,\n\t\"./ka\": 736,\n\t\"./ka.js\": 736,\n\t\"./kk\": 737,\n\t\"./kk.js\": 737,\n\t\"./km\": 738,\n\t\"./km.js\": 738,\n\t\"./kn\": 739,\n\t\"./kn.js\": 739,\n\t\"./ko\": 740,\n\t\"./ko.js\": 740,\n\t\"./ky\": 741,\n\t\"./ky.js\": 741,\n\t\"./lb\": 742,\n\t\"./lb.js\": 742,\n\t\"./lo\": 743,\n\t\"./lo.js\": 743,\n\t\"./lt\": 744,\n\t\"./lt.js\": 744,\n\t\"./lv\": 745,\n\t\"./lv.js\": 745,\n\t\"./me\": 746,\n\t\"./me.js\": 746,\n\t\"./mi\": 747,\n\t\"./mi.js\": 747,\n\t\"./mk\": 748,\n\t\"./mk.js\": 748,\n\t\"./ml\": 749,\n\t\"./ml.js\": 749,\n\t\"./mn\": 750,\n\t\"./mn.js\": 750,\n\t\"./mr\": 751,\n\t\"./mr.js\": 751,\n\t\"./ms\": 752,\n\t\"./ms-my\": 753,\n\t\"./ms-my.js\": 753,\n\t\"./ms.js\": 752,\n\t\"./mt\": 754,\n\t\"./mt.js\": 754,\n\t\"./my\": 755,\n\t\"./my.js\": 755,\n\t\"./nb\": 756,\n\t\"./nb.js\": 756,\n\t\"./ne\": 757,\n\t\"./ne.js\": 757,\n\t\"./nl\": 758,\n\t\"./nl-be\": 759,\n\t\"./nl-be.js\": 759,\n\t\"./nl.js\": 758,\n\t\"./nn\": 760,\n\t\"./nn.js\": 760,\n\t\"./pa-in\": 761,\n\t\"./pa-in.js\": 761,\n\t\"./pl\": 762,\n\t\"./pl.js\": 762,\n\t\"./pt\": 763,\n\t\"./pt-br\": 764,\n\t\"./pt-br.js\": 764,\n\t\"./pt.js\": 763,\n\t\"./ro\": 765,\n\t\"./ro.js\": 765,\n\t\"./ru\": 766,\n\t\"./ru.js\": 766,\n\t\"./sd\": 767,\n\t\"./sd.js\": 767,\n\t\"./se\": 768,\n\t\"./se.js\": 768,\n\t\"./si\": 769,\n\t\"./si.js\": 769,\n\t\"./sk\": 770,\n\t\"./sk.js\": 770,\n\t\"./sl\": 771,\n\t\"./sl.js\": 771,\n\t\"./sq\": 772,\n\t\"./sq.js\": 772,\n\t\"./sr\": 773,\n\t\"./sr-cyrl\": 774,\n\t\"./sr-cyrl.js\": 774,\n\t\"./sr.js\": 773,\n\t\"./ss\": 775,\n\t\"./ss.js\": 775,\n\t\"./sv\": 776,\n\t\"./sv.js\": 776,\n\t\"./sw\": 777,\n\t\"./sw.js\": 777,\n\t\"./ta\": 778,\n\t\"./ta.js\": 778,\n\t\"./te\": 779,\n\t\"./te.js\": 779,\n\t\"./tet\": 780,\n\t\"./tet.js\": 780,\n\t\"./tg\": 781,\n\t\"./tg.js\": 781,\n\t\"./th\": 782,\n\t\"./th.js\": 782,\n\t\"./tl-ph\": 783,\n\t\"./tl-ph.js\": 783,\n\t\"./tlh\": 784,\n\t\"./tlh.js\": 784,\n\t\"./tr\": 785,\n\t\"./tr.js\": 785,\n\t\"./tzl\": 786,\n\t\"./tzl.js\": 786,\n\t\"./tzm\": 787,\n\t\"./tzm-latn\": 788,\n\t\"./tzm-latn.js\": 788,\n\t\"./tzm.js\": 787,\n\t\"./ug-cn\": 789,\n\t\"./ug-cn.js\": 789,\n\t\"./uk\": 790,\n\t\"./uk.js\": 790,\n\t\"./ur\": 791,\n\t\"./ur.js\": 791,\n\t\"./uz\": 792,\n\t\"./uz-latn\": 793,\n\t\"./uz-latn.js\": 793,\n\t\"./uz.js\": 792,\n\t\"./vi\": 794,\n\t\"./vi.js\": 794,\n\t\"./x-pseudo\": 795,\n\t\"./x-pseudo.js\": 795,\n\t\"./yo\": 796,\n\t\"./yo.js\": 796,\n\t\"./zh-cn\": 797,\n\t\"./zh-cn.js\": 797,\n\t\"./zh-hk\": 798,\n\t\"./zh-hk.js\": 798,\n\t\"./zh-tw\": 799,\n\t\"./zh-tw.js\": 799\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1055;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 1055\n// module chunks = 26","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { SQLiteObject } from '@ionic-native/sqlite';\r\n\r\n/**\r\n * Result set from executed SQL statements\r\n *\r\n * @interface ISQLResultSet\r\n * @see {@link https://www.w3.org/TR/webdatabase/#database-query-results}\r\n */\r\ninterface ISQLResultSet {\r\n    readonly insertId: number;\r\n    readonly rowsAffected: number;\r\n    readonly rows: { item: Function, length: number };\r\n}\r\n\r\n/**\r\n * Parent class of all tables. Defines the structure of each table\r\n *\r\n * @class Table\r\n */\r\nclass Table {\r\n    constructor(\r\n        public name: string,\r\n        public version: number,  // increment value whenever columns list is modified\r\n        protected db: SQLiteObject,\r\n        protected columns: Column[],\r\n    ) { }\r\n\r\n    /**\r\n     * Execute SQL statement to create table\r\n     *\r\n     * @returns {Promise<boolean>}  True if executed successfully\r\n     */\r\n    sqlCreate(): Promise<boolean> {\r\n        const sql = `CREATE TABLE IF NOT EXISTS ${this.name} (${this.getSchema()})`;\r\n        const params = [];\r\n        return this.db.executeSql(sql, params).then(() => true);\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to delete table\r\n     *\r\n     * @returns {Promise<boolean>}  True if executed successfully\r\n     */\r\n    sqlDrop(): Promise<boolean> {\r\n        const sql = `DROP TABLE IF EXISTS ${this.name}`;\r\n        const params = [];\r\n        return this.db.executeSql(sql, params).then(() => true);\r\n    }\r\n\r\n    /**\r\n     * Gets the first row of data from dataset\r\n     *\r\n     * @protected\r\n     * @param {ISQLResultSet} resultSet  SQL result set from executed SQL statement\r\n     * @returns {*}  First row of data\r\n     */\r\n    protected getFirstRow(resultSet: ISQLResultSet): any {\r\n        return (resultSet.rows.length > 0) ? resultSet.rows.item(0) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Gets all rows of data from dataset. Data returned is immutable\r\n     *\r\n     * @protected\r\n     * @param {ISQLResultSet} resultSet  SQL result set from executed SQL statement\r\n     * @returns {*}  All rows of data\r\n     */\r\n    protected getAllRows(resultSet: ISQLResultSet): any[] {\r\n        const results = [];\r\n        for (let i = 0; i < resultSet.rows.length; i++) {\r\n            results.push(resultSet.rows.item(i));\r\n        }\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Get the row ID of the last inserted row. If result set is for multiple executed statements,\r\n     * only the row ID of the last row will be returned\r\n     *\r\n     * @protected\r\n     * @param {ISQLResultSet} resultSet  SQL result set from executed SQL statement\r\n     * @returns {number}  Row ID\r\n     */\r\n    protected getInsertedId(resultSet: ISQLResultSet): number {\r\n        if (resultSet.rowsAffected > 0) {\r\n            return resultSet.insertId;\r\n        } else {\r\n            throw new Error('Unable to store record in database');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the number of rows that were changed by the SQL statement\r\n     *\r\n     * @protected\r\n     * @param {ISQLResultSet} resultSet  SQL result set from executed SQL statement\r\n     * @returns {number}  Number of rows affected\r\n     */\r\n    protected getRowsAffected(resultSet: ISQLResultSet): number {\r\n        return resultSet.rowsAffected;\r\n    }\r\n\r\n    /**\r\n     * Get schema of table in SQL query format\r\n     *\r\n     * @private\r\n     * @returns {string}\r\n     */\r\n    private getSchema(): string {\r\n        return this.columns.map((col) => col.getSchema()).join(',');\r\n    }\r\n}\r\n\r\n/**\r\n * Represents one column of a table\r\n *\r\n * @class Column\r\n */\r\nclass Column {\r\n    isJSON?: boolean = false;\r\n    isBase64?: boolean = false;\r\n    isPrimaryKey?: boolean = false;\r\n\r\n    constructor(\r\n        public name: string,\r\n        public type: 'TEXT' | 'INTEGER' | 'BOOLEAN', // https://github.com/litehelpers/Cordova-sqlite-storage#general-sqlite-pitfalls\r\n        opts?: Partial<Column>,\r\n    ) {\r\n        Object.assign(this, opts);\r\n    }\r\n\r\n    /**\r\n     * Get schema of the column in SQL query format\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getSchema(): string {\r\n        const specialKey = (this.isPrimaryKey) ? 'PRIMARY KEY' : '';\r\n        return `${this.name} ${this.type} ${specialKey}`;\r\n    }\r\n}\r\n\r\n/**\r\n * List of columns in the `jobs` table\r\n *\r\n * @interface IJobsColumns\r\n */\r\nexport interface IJobsColumns {\r\n    jobId: number;\r\n    attemptedByDriver: string;\r\n    attemptedByVehicle: string;\r\n    delivered: boolean;\r\n    deliveryTime: string;\r\n    signatureB64: string;\r\n    photoB64: string;\r\n    notePhotosB64: string[];\r\n    note: { key: string; value: string }[];\r\n    items: { Id: number; ActualItemQty: number }[];\r\n}\r\n\r\n/**\r\n * Stores completed jobs that were not sent to server successfully\r\n *\r\n * @class JobsTable\r\n * @extends {Table}\r\n */\r\nexport class JobsTable extends Table {\r\n    constructor(\r\n        db: SQLiteObject,\r\n    ) {\r\n        super('jobs', 1, db,\r\n            [\r\n                new Column('jobId', 'INTEGER'),\r\n                new Column('attemptedByDriver', 'TEXT'),\r\n                new Column('attemptedByVehicle', 'TEXT'),\r\n                new Column('delivered', 'BOOLEAN'),\r\n                new Column('deliveryTime', 'TEXT'),\r\n                new Column('signatureB64', 'TEXT', { isBase64: true }),\r\n                new Column('photoB64', 'TEXT', { isBase64: true }),\r\n                new Column('notePhotosB64', 'TEXT', { isJSON: true, isBase64: true }),\r\n                new Column('note', 'TEXT', { isJSON: true }),\r\n                new Column('items', 'TEXT', { isJSON: true }),\r\n            ],\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get all rows from `jobs` table\r\n     *\r\n     * @returns {Promise<IJobsColumns[]>}\r\n     */\r\n    sqlSelect(): Promise<IJobsColumns[]> {\r\n        const sql = `SELECT * FROM ${this.name}`;\r\n        const params = [];\r\n        return this.db.executeSql(sql, params).then(this.getAllRows);\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to insert one job into the `jobs` table\r\n     *\r\n     * @param {IJobsColumns} job  Job to be inserted\r\n     * @returns {Promise<number>}  Row ID\r\n     */\r\n    sqlInsert(job: IJobsColumns): Promise<number> {\r\n        const columns = [];\r\n        const params = [];\r\n\r\n        for (const key in job) {\r\n            columns.push(key);\r\n            params.push((job[key] instanceof Object) ? JSON.stringify(job[key]) : job[key]); // convert json objects to strings\r\n        }\r\n\r\n        const sql = `INSERT INTO ${this.name} (${columns.join(',')}) VALUES (${params.map(() => '?')})`;\r\n        return this.db.executeSql(sql, params).then(this.getInsertedId);\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to delete one job based on row ID from the `jobs` table\r\n     *\r\n     * @param {number} id  Row ID\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    sqlDelete(id: number): Promise<number> {\r\n        const sql = `DELETE FROM ${this.name} WHERE rowId = ?`;\r\n        const params = [id];\r\n        return this.db.executeSql(sql, params).then((resultSet) => resultSet.rowsAffected);\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to delete all rows from `jobs` table\r\n     *\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    sqlDeleteAll(): Promise<number> {\r\n        const sql = `DELETE FROM ${this.name}`;\r\n        const params = [];\r\n        return this.db.executeSql(sql, params).then((resultSet) => resultSet.rowsAffected);\r\n    }\r\n}\r\n\r\n/**\r\n * Stores key value pairs. SQL storage is used instead of other means is to prevent\r\n * data from purging when memory size has reached its limits\r\n *\r\n * @class KeyValueTable\r\n * @extends {Table}\r\n */\r\nexport class KeyValueTable extends Table {\r\n    constructor(\r\n        db: SQLiteObject,\r\n    ) {\r\n        super('keyvalue', 1, db,\r\n            [\r\n                new Column('key', 'TEXT', { isPrimaryKey: true }),\r\n                new Column('value', 'TEXT'),\r\n            ],\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to get value that is mapped to a particular key\r\n     *\r\n     * @param {string} key  Unique identifier\r\n     * @returns {Promise<string>}  Value that is linked to the `key`\r\n     */\r\n    sqlGetValue(key: string): Promise<string> {\r\n        const sql = `SELECT value FROM ${this.name} WHERE key = ?`;\r\n        const params = [key];\r\n        return this.db.executeSql(sql, params).then(this.getFirstRow).then((row: { value: string }) => row ? row.value : undefined);\r\n    }\r\n\r\n    /**\r\n     * Execute SQL statement to set value of a particular key.\r\n     * If key exist, existing value is overwritten.\r\n     * If key does not exist, key-value pair will be inserted\r\n     *\r\n     * @param {string} key  Unique identifier\r\n     * @param {string} value  Value that is linked to the `key`\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    sqlSetValue(key: string, value: string): Promise<number> {\r\n        const sql = `INSERT OR REPLACE INTO ${this.name} VALUES (?, ?)`;\r\n        const params = [key, value];\r\n        return this.db.executeSql(sql, params).then(this.getRowsAffected);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/storage/sql-table.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nexport class Item {\r\n    private _Id: string;\r\n    private _Weight: number;\r\n    private _Description: string;\r\n\r\n    constructor(init?: Partial<Item>) {\r\n        Object.assign(this, init);\r\n    }\r\n\r\n    get Id(): string { return this._Id; }\r\n    set Id(id) { this._Id = id; }\r\n\r\n    get Weight(): number { return this._Weight; }\r\n    set Weight(weight) { this._Weight = weight; }\r\n\r\n    get Description(): string { return this._Description; }\r\n    set Description(description) { this._Description = description; }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/classes/item.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Globals, ItemInputMethod } from '../../globals';\r\n\r\ninterface INoteOptions {\r\n    option: { required: boolean, list: string[] };\r\n    photo: { maxCount: number };\r\n}\r\n\r\ninterface IPodOptions {\r\n    photo: { required: boolean };\r\n}\r\n\r\ninterface IItemOptions {\r\n    input: { default: 'BARCODE' | 'TEXT', allowToggle: boolean };\r\n    barcode: { formats: string };\r\n}\r\n\r\ninterface IStatusLabel {\r\n    value: number;\r\n    label: string;\r\n}\r\n\r\nexport class AuthResponse {\r\n    username: string;\r\n    role: string;\r\n    fullname: string;\r\n    token: string;\r\n    serverDate: string;\r\n    forceChangePassword: boolean = false;\r\n\r\n    vehicleId?: string;\r\n    vehiclePlateNumber?: string;\r\n    vehicleUserGroup?: string;\r\n\r\n    noteOptions: INoteOptions = {\r\n        option: {\r\n            required: Globals.setting.note.optionRequired,\r\n            list: Globals.setting.note.options,\r\n        },\r\n        photo: {\r\n            maxCount: Globals.setting.note.maxNumPhoto,\r\n        },\r\n    };\r\n    podOptions: IPodOptions = {\r\n        photo: {\r\n            required: Globals.setting.pod.photoRequired,\r\n        },\r\n    };\r\n    itemOptions: IItemOptions = {\r\n        input: {\r\n            default: (Globals.setting.item.defaultInput ===  ItemInputMethod.Barcode) ? 'BARCODE' : 'TEXT',\r\n            allowToggle: Globals.setting.item.allowSwitchInput,\r\n        },\r\n        barcode: {\r\n            formats: Globals.setting.item.acceptedCodes,\r\n        },\r\n    };\r\n    statusLabels: IStatusLabel[] = [];\r\n\r\n    constructor(init?: Partial<AuthResponse>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/auth-response.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuController, Platform, App } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Network } from '@ionic-native/network';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\nimport { MenuName, Globals } from '../globals';\r\nimport { AuthProvider } from '../providers/user/auth';\r\nimport { NativeHTTP } from '../providers/driver-rest/native-http';\r\nimport { StorageProvider } from '../providers/storage/storage';\r\nimport { UserDriverProvider } from '../providers/user/user-driver';\r\nimport { NavigationProvider } from '../providers/navigation/navigation';\r\n\r\ninterface IPage {\r\n    name: string;\r\n    title: string;\r\n    icon: string;\r\n}\r\n\r\n@Component({\r\n    templateUrl: 'app.html',\r\n})\r\nexport class MyApp extends NavigationProvider {\r\n    allJobsMenuId: string = MenuName.AllJobs;\r\n    allJobsMenuPages: IPage[] = [\r\n        { name: 'AllJobsPage', title: 'Today\\'s Jobs', icon: 'checkmark-circle' },\r\n        { name: 'PlannerNotesPage', title: 'Planner Notes', icon: 'list' },\r\n        { name: 'NextDayJobsPage', title: 'Next Day Jobs', icon: 'calendar' },\r\n    ];\r\n\r\n    constructor(\r\n        public app: App,\r\n        public auth: AuthProvider,\r\n        public driver: UserDriverProvider,\r\n        public keyboard: Keyboard,\r\n        public menuCtrl: MenuController,\r\n        public http: NativeHTTP,\r\n        public network: Network,\r\n        public platform: Platform,\r\n        public statusBar: StatusBar,\r\n        public storage: StorageProvider,\r\n        public splashScreen: SplashScreen,\r\n        public translate: TranslateService,\r\n    ) {\r\n        super({ app: app, platform: platform });\r\n        this.initializeApp();\r\n    }\r\n\r\n    initializeApp() {\r\n        this.platform.ready()\r\n            .then(() => this.splashScreen.show())\r\n            .then(() => this.storage.init()) // init storage to set url first\r\n            .then(() => {\r\n                // timeout error after this time\r\n                this.http.setRequestTimeout(5);\r\n                // send all data to server in json\r\n                this.http.setDataSerializer('json');\r\n                // enable ssl pinning if specified in globals\r\n                const sslCertMode = (Globals.features.enableSSLPinning) ? 'pinned' : 'default';\r\n                return this.http.setSSLCertMode(sslCertMode).catch(() => { }); // catch for web usage\r\n            })\r\n            .then(() => {\r\n                // TODO: create preference provider and set according to globalization\r\n                // indicate supported languages\r\n                this.translate.addLangs(['en']);\r\n                this.translate.setDefaultLang('en');\r\n            })\r\n            .then(() => this.auth.isLoggedIn().catch(() => this.auth.notifier.next(false)))// redirect to login page if any errors\r\n            .then(() => {\r\n                // hide menu for all pages\r\n                this.menuCtrl.enable(false, this.allJobsMenuId);\r\n\r\n                // hide footer when keyboard is open\r\n                this.keyboard.onKeyboardShow().subscribe(() => document.body.classList.add('keyboard-is-open'));\r\n                this.keyboard.onKeyboardHide().subscribe(() => document.body.classList.remove('keyboard-is-open'));\r\n\r\n                // set status bar as special color when there is no internet\r\n                this.setStatusBar();\r\n                this.network.onDisconnect().subscribe(() => this.setStatusBar());\r\n                this.network.onConnect().subscribe(() => {\r\n                    this.setStatusBar();\r\n                    this.auth.isLoggedIn();\r\n                });\r\n\r\n                this.splashScreen.hide();\r\n            });\r\n\r\n        // navigation guard, will navigate accordingly when user is logged out\r\n        this.auth.notifier.distinctUntilChanged().subscribe((status) => {\r\n            if (status === true) {\r\n                setTimeout(() => this.goHomePage());\r\n            } else if (status === false) {\r\n                setTimeout(() => this.goLoginPage());\r\n            }\r\n        });\r\n\r\n        if (this.platform.is('ios')) {\r\n            this.platform.resume.subscribe(() => this.auth.isLoggedIn());\r\n        }\r\n    }\r\n\r\n    btnOpenPage(page: IPage) {\r\n        this.goPage(page.name);\r\n    }\r\n\r\n    btnMainPage() {\r\n        this.goHomePage();\r\n    }\r\n\r\n    private setStatusBar() {\r\n        if (this.network.type === 'none') {\r\n            this.statusBar.backgroundColorByName('red');\r\n        } else {\r\n            this.statusBar.backgroundColorByName('black');\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Toast, ToastController, ToastOptions } from 'ionic-angular';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications';\r\nimport { trim as _trim, includes as _includes, toString as _toString } from 'lodash-es';\r\n\r\n@Injectable()\r\nexport class NotificationProvider {\r\n    private readonly maxCharacters = 254;\r\n    private readonly toastOptions: ToastOptions = {\r\n        showCloseButton: true,\r\n        position: 'top',\r\n        duration: 3000,\r\n    };\r\n\r\n    constructor(\r\n        public toastCtrl: ToastController,\r\n        public localNotifications: LocalNotifications,\r\n    ) { }\r\n\r\n    /**\r\n     * Show toast notification for errors\r\n     *\r\n     * @param {string|Error} msg  Error message\r\n     * @param {string|Error} serverError  Error message from server\r\n     * @returns {Promise<Toast>}\r\n     */\r\n    error(msg: string | Error, serverError?: string | Error): Promise<Toast> {\r\n        console.log('[TOAST] Error:', msg, serverError);\r\n        let message = _toString(msg);\r\n\r\n        // show string header only if the header does not contain text 'Error' (aesthetic purpose)\r\n        if (!_includes(message, 'Error')) {\r\n            message = `Error: ${message}`;\r\n        }\r\n\r\n        // append server error\r\n        if (serverError !== undefined) {\r\n            message += '\\n\\nServer Error: ';\r\n            if (serverError instanceof Error) {\r\n                message += serverError.toString();\r\n            } else {\r\n                message += JSON.stringify(serverError);\r\n            }\r\n        }\r\n        return this.show({ message: message, duration: (this.toastOptions.duration + 3000) });\r\n    }\r\n\r\n    /**\r\n     * Show toast notification for info / misc\r\n     *\r\n     * @param {string} msg  Message to display\r\n     * @returns {Promise<Toast>}\r\n     */\r\n    info(msg: string): Promise<Toast> {\r\n        return this.show({ message: JSON.stringify(msg) });\r\n    }\r\n\r\n    /**\r\n     * Show toast notification for success messages\r\n     *\r\n     * @param {string} msg  Success message\r\n     * @returns {Promise<Toast>}\r\n     */\r\n    success(msg: string): Promise<Toast> {\r\n        console.log('[TOAST] Success:', msg);\r\n        return this.show({ message: `Success: ${msg}` });\r\n    }\r\n\r\n    /**\r\n     * Show local notification that will appear in notification drawer\r\n     *\r\n     * @param {string} msg  Message to display\r\n     */\r\n    local(msg: string): void {\r\n        this.localNotifications.schedule({\r\n            title: 'Logistics',\r\n            text: msg,\r\n            priority: 2,\r\n            launch: true,\r\n            // Android only\r\n            clock: true,\r\n            lockscreen: true,\r\n            smallIcon: 'res://logo', // res://new_job\r\n            color: '#1f7bb6',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show toast notification\r\n     *\r\n     * @private\r\n     * @param {ToastOptions} config  Custom config for each toast notification. Overrides default options\r\n     * @returns {Promise<Toast>}\r\n     */\r\n    private show(config: ToastOptions): Promise<Toast> {\r\n        // reduce the length of message if necessary to prevent toast taking up entire page space\r\n        config.message = _trim(config.message);\r\n        if (config.message) {\r\n            let truncatedMessage = config.message.substring(0, this.maxCharacters);\r\n            truncatedMessage += (truncatedMessage === config.message) ? '' : '...'; // add ellipse if text was truncated\r\n            config.message = truncatedMessage;\r\n        }\r\n        return this.toastCtrl.create(Object.assign({}, this.toastOptions, config)).present();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/notification/notification.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HTTPResponse } from '@ionic-native/http';\r\nimport { map as _map } from 'lodash-es';\r\n\r\nimport { NativeHTTP } from './native-http';\r\nimport { Job, AttemptedJob } from '../classes/job';\r\nimport { Item } from '../classes/item';\r\nimport { AuthResponse } from '../user/auth-response';\r\n\r\nclass CustomErrorHandler {\r\n    static catch(err: HTTPResponse): never {\r\n        if (err.status === 0) {\r\n            throw new Error(`Invalid URL. Error: ${err.error}`);\r\n        } else if (err.status === -1 && err.error) {\r\n            throw err.error.split('Exception: ').pop();\r\n        } else {\r\n            throw err.error;\r\n        }\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    isLoggedIn(): Promise<AuthResponse> {\r\n        return this.http.get('web/auth/v2/isLoggedIn')\r\n            .then((result) => new AuthResponse(result))\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    resetPassword(data: any = {}): Promise<void> {\r\n        return this.http.put('api/user/v2/password', data)\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    login(data: any = {}): Promise<AuthResponse> {\r\n        return this.http.post('api/auth/v2/login', data)\r\n            .then((result) => new AuthResponse(result))\r\n            .catch((err: HTTPResponse) => {\r\n                let msg = err.error;\r\n                if (err.status === 401) {\r\n                    msg = 'Incorrect username or password.';\r\n                } else if (err.status === 0 || err.status === 404) {\r\n                    msg = 'Please check that the server URL is valid.';\r\n                } else if (err.status === -1 && err.error) {\r\n                    msg = `Unable to log in. ${err.error.split('Exception: ').pop()}`;\r\n                } else if (typeof msg !== 'string') {\r\n                    msg = `Unable to log in. ${JSON.stringify(msg)}`;\r\n                }\r\n                throw msg;\r\n            });\r\n    }\r\n\r\n    logout(): Promise<void> {\r\n        return this.http.post('api/auth/v2/logout', {})\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class JobsApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    get(params: any = {}): Promise<Job[]> {\r\n        return this.http.get('web/data/v2.1/job', params)\r\n            .then((result) => _map(result, (job) => new Job(job)))\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    attempt(body: AttemptedJob): Promise<Job> {\r\n        // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/63\r\n        // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/101\r\n        return this.http.put(`api/data/v2.1/job/${body.jobId}/attemptB64`, body.withBase64())\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    sync(body: AttemptedJob[] = []): Promise<void> {\r\n        // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/63\r\n        // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/101\r\n        return this.http.post(`api/data/v2.1/job/syncB64`, _map(body, (job) => job.withBase64()))\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    getPodPhotos(jobId: number): Promise<{ Signature: string, Photo: string }> {\r\n        return this.http.get(`web/data/v2.1/pod/${jobId}`)\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n\r\n    getNotePhotos(jobId: number): Promise<string[]> {\r\n        return this.http.get(`web/data/v2.1/note/${jobId}`)\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class ItemApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    get(itemId: string): Promise<Item> {\r\n        return this.http.get(`web/data/v2.1/item/${itemId}`)\r\n            .then((result) => new Item(result))\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class VehicleApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    update(vehicleId: string, data: object): Promise<void> {\r\n        return this.http.put(`api/data/v2.1/vehicle/${vehicleId}`, { newValues: data })\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class MiscApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    getLatestAppVersion(): Promise<string> {\r\n        return this.http.get('web/data/v2.1/misc/app/version', {}, { 'Content-Type': 'application/text' })\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\r\nexport interface IMailApiRequest {\r\n    jobs: Job[];\r\n    lateBy: string;\r\n    driverRemarks: string;\r\n}\r\n\r\n@Injectable()\r\nexport class MailApi {\r\n    constructor(\r\n        public http: NativeHTTP,\r\n    ) { }\r\n\r\n    send(data: IMailApiRequest): Promise<void> {\r\n        return this.http.post('api/message/v2', data)\r\n            .catch(CustomErrorHandler.catch);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/driver-rest/driver-rest.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport * as moment from 'moment';\r\nimport { toUpper as _toUpper, isNil as _isNil, trim as _trim, map as _map } from 'lodash-es';\r\n\r\nimport { Note } from './note';\r\n\r\n/**\r\n * All possible job status\r\n *\r\n * @enum {number}\r\n */\r\nexport enum JobStatus {\r\n    Pending = 1,\r\n    Late = 2,\r\n    Ontime = 3,\r\n    Unsuccessful = 4,\r\n    ExpectToBeLate = 5,\r\n}\r\n\r\n/**\r\n * All possible job types\r\n *\r\n * @enum {string}\r\n */\r\nexport enum JobType {\r\n    Pickup = 'PICKUP',\r\n    Delivery = 'DELIVERY',\r\n}\r\n\r\n/**\r\n * Item to deliver or pickup for each job\r\n *\r\n * @interface IDeliveryItem\r\n */\r\nexport interface IDeliveryItem {\r\n    Id: number;\r\n    ItemId: string;\r\n    ItemQty: number;\r\n    ActualItemQty: number;\r\n}\r\n\r\n/**\r\n * Text that needs to be verified before allowing driver to complete a job.\r\n * Should not be exported since code should be verified via functions in `Job` class\r\n *\r\n * @interface IVerificationCode\r\n */\r\ninterface IVerificationCode {\r\n    Code: string;\r\n}\r\n\r\n/**\r\n * Represents a job object that is returned from the server. Multiple\r\n * jobs can belong to the same order, indicated by `DeliveryMasterId`.\r\n *\r\n * @class Job\r\n */\r\nexport class Job {\r\n    private _Id: number;\r\n    private _DeliveryMasterId: string;\r\n    private _JobType: JobType;\r\n    private _Status: JobStatus;\r\n    private _Address: string;\r\n    private _Postal: string;\r\n    private _Lat: number;\r\n    private _Lng: number;\r\n    private _ContactName: string;\r\n    private _ContactPhone: string;\r\n    private _JobSequence: number;\r\n    private _EngineRouteSeqNum: number;\r\n    private _StartTimeWindow: Date;\r\n    private _EndTimeWindow: Date;\r\n    private _ActualDeliveryTime: Date;\r\n    private _NoteFromPlanner: Note[];\r\n    private _NoteFromDriver: Note[];\r\n    private _DeliveryItems: IDeliveryItem[];\r\n    private _VerificationCode: IVerificationCode;\r\n    private _UserGroup: string;\r\n\r\n    constructor(init?: Partial<Job>) {\r\n        Object.assign(this, init);\r\n    }\r\n\r\n    get Id(): number { return this._Id; }\r\n    set Id(id) { this._Id = id; }\r\n\r\n    get DeliveryMasterId(): string { return this._DeliveryMasterId; }\r\n    set DeliveryMasterId(id) { this._DeliveryMasterId = id; }\r\n\r\n    get JobType(): JobType { return this._JobType; }\r\n    set JobType(jobtype) { this._JobType = jobtype; }\r\n\r\n    get Status(): JobStatus { return this._Status; }\r\n    set Status(status) { this._Status = status; }\r\n\r\n    get Address(): string { return this._Address; }\r\n    set Address(addr) { this._Address = addr; }\r\n\r\n    get Postal(): string { return this._Postal; }\r\n    set Postal(postal) { this._Postal = postal; }\r\n\r\n    get Lat(): number { return this._Lat; }\r\n    set Lat(lat) { this._Lat = lat; }\r\n\r\n    get Lng(): number { return this._Lng; }\r\n    set Lng(lng) { this._Lng = lng; }\r\n\r\n    get ContactName(): string { return this._ContactName; }\r\n    set ContactName(name) { this._ContactName = name; }\r\n\r\n    get ContactPhone(): string { return this._ContactPhone; }\r\n    set ContactPhone(phone) { this._ContactPhone = phone; }\r\n\r\n    get JobSequence(): number { return this._JobSequence; }\r\n    set JobSequence(seq) { this._JobSequence = seq; }\r\n\r\n    get EngineRouteSeqNum(): number { return this._EngineRouteSeqNum; }\r\n    set EngineRouteSeqNum(num) { this._EngineRouteSeqNum = num; }\r\n\r\n    get StartTimeWindow(): Date { return this._StartTimeWindow; }\r\n    set StartTimeWindow(date) { this._StartTimeWindow = date ? moment(date).toDate() : undefined; }\r\n\r\n    get EndTimeWindow(): Date { return this._EndTimeWindow; }\r\n    set EndTimeWindow(date) { this._EndTimeWindow = date ? moment(date).toDate() : undefined; }\r\n\r\n    get ActualDeliveryTime(): Date { return this._ActualDeliveryTime; }\r\n    set ActualDeliveryTime(date) { this._ActualDeliveryTime = date ? moment(date).toDate() : undefined; }\r\n\r\n    get NoteFromPlanner(): Note[] { return this._NoteFromPlanner; }\r\n    set NoteFromPlanner(notes) { this._NoteFromPlanner = this.initNotes(notes); }\r\n\r\n    get NoteFromDriver(): Note[] { return this._NoteFromDriver; }\r\n    set NoteFromDriver(notes) { this._NoteFromDriver = this.initNotes(notes); }\r\n\r\n    get DeliveryItems(): IDeliveryItem[] { return this._DeliveryItems; }\r\n    set DeliveryItems(items) { this._DeliveryItems = items; }\r\n\r\n    get VerificationCode(): IVerificationCode { return this._VerificationCode; }\r\n    set VerificationCode(code) { this._VerificationCode = this.initVerificationCode(code); }\r\n\r\n    get UserGroup(): string { return this._UserGroup; }\r\n    set UserGroup(usergroup) { this._UserGroup = usergroup; }\r\n\r\n    /**\r\n     * Estimates job status based on local time (i.e. not server time)\r\n     *\r\n     * @param {boolean} [delivered=false]  Set true if job is successful, regardless complete or incomplete items count\r\n     * @param {string} attemptedTime  Time of attempt, regardless successful or not\r\n     * @returns {JobStatus}\r\n     */\r\n    estimateStatus(delivered: boolean = false, attemptedTime: string): JobStatus {\r\n        if (delivered === false) {\r\n            return JobStatus.Unsuccessful;\r\n        } else if (moment(this.EndTimeWindow).isAfter(moment(attemptedTime))) {\r\n            return JobStatus.Ontime;\r\n        } else {\r\n            return JobStatus.Late;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object without private properties\r\n     *\r\n     * @returns {*}  JSON object\r\n     */\r\n    toJSON(): any {\r\n        return {\r\n            Id: this._Id,\r\n            DeliveryMasterId: this._DeliveryMasterId,\r\n            JobType: this._JobType,\r\n            Status: this._Status,\r\n            Address: this._Address,\r\n            Postal: this._Postal,\r\n            Lat: this._Lat,\r\n            Lng: this._Lng,\r\n            ContactName: this._ContactName,\r\n            ContactPhone: this._ContactPhone,\r\n            JobSequence: this._JobSequence,\r\n            StartTimeWindow: this._StartTimeWindow,\r\n            EndTimeWindow: this._EndTimeWindow,\r\n            NoteFromPlanner: JSON.stringify(_map(this._NoteFromPlanner, (note) => note.toJSON())),\r\n            NoteFromDriver: JSON.stringify(_map(this._NoteFromDriver, (note) => note.toJSON())),\r\n            UserGroup: this._UserGroup,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Whether job is a pickup\r\n     *\r\n     * @returns {boolean}  True if job is a pickup\r\n     */\r\n    isPickup(): boolean {\r\n        return this.JobType === JobType.Pickup;\r\n    }\r\n\r\n    /**\r\n     * Whether job is a delivery\r\n     *\r\n     * @returns {boolean}  True if job is a delivery\r\n     */\r\n    isDelivery(): boolean {\r\n        return this.JobType === JobType.Delivery;\r\n    }\r\n\r\n    /**\r\n     * Whether job is not done\r\n     *\r\n     * @returns {boolean}  True if job is not done\r\n     */\r\n    isPending(): boolean {\r\n        return this.Status === JobStatus.Pending || this.Status === JobStatus.ExpectToBeLate;\r\n    }\r\n\r\n    /**\r\n     * Whether job is unsuccessful; job was attempted, but items were not delivered\r\n     *\r\n     * @returns {boolean}  True if job is unsuccessful\r\n     */\r\n    isUnsuccessful(): boolean {\r\n        return this.Status === JobStatus.Unsuccessful;\r\n    }\r\n\r\n    /**\r\n     * Whether job is done\r\n     *\r\n     * @returns {boolean}  True if job is done\r\n     */\r\n    isCompleted(): boolean {\r\n        return !this.isPending() && !this.isUnsuccessful();\r\n    }\r\n\r\n    /**\r\n     * Whether job requires verification\r\n     *\r\n     * @returns {boolean}  True if job needs verification before allow attempt\r\n     */\r\n    hasVerificationCode(): boolean {\r\n        return !!(this._VerificationCode);\r\n    }\r\n\r\n    /**\r\n     * Verifies input against verification code (case-insensitive)\r\n     *\r\n     * @param {string} code  Code input from driver\r\n     * @returns {boolean}  True if code input is correct\r\n     */\r\n    verifyCode(code: string): boolean {\r\n        return (_toUpper(_trim(code)) === _toUpper(_trim(this._VerificationCode.Code)));\r\n    }\r\n\r\n    /**\r\n     * Maps JSON from server to `Note` objects\r\n     * As accessors cannot be of different types, this function acts like a middleman\r\n     * @see {@link https://github.com/Microsoft/TypeScript/issues/2521}\r\n     *\r\n     * @private\r\n     * @param {any[]} [notes=[]]  Note columns from server\r\n     * @returns {Note[]}\r\n     */\r\n    private initNotes(notes: any[] = []): Note[] {\r\n        notes = _isNil(notes) ? [] : notes;\r\n        return _map(notes, (note) => new Note(note));\r\n    }\r\n\r\n    /**\r\n     * Maps response from server to `IVerificationCode` object\r\n     * As accessors cannot be of different types, this function acts like a middleman\r\n     * @see {@link https://github.com/Microsoft/TypeScript/issues/2521}\r\n     *\r\n     * @private\r\n     * @param {(string | IVerificationCode)} code  VerificationCode column from server\r\n     * @returns {IVerificationCode}\r\n     */\r\n    private initVerificationCode(code: string | IVerificationCode): IVerificationCode {\r\n        return (code && typeof code === 'string') ? { Code: code } : code as IVerificationCode;\r\n    }\r\n}\r\n\r\n/**\r\n * Represents an attempted job. Used to send to the server to\r\n * indicate job attempt, regardless success or failure\r\n *\r\n * @class AttemptedJob\r\n */\r\nexport class AttemptedJob {\r\n    private notePhotos?: Blob[];\r\n    private signature?: Blob;\r\n    private photo?: Blob;\r\n\r\n    jobId: number;\r\n    delivered: boolean;\r\n    note: Note[];\r\n    notePhotosB64: string[];\r\n    items: { Id: number, ActualItemQty: number }[];\r\n    signatureB64: string;\r\n    photoB64: string;\r\n\r\n    // for sync api\r\n    attemptedByDriver: string;\r\n    attemptedByVehicle: string;\r\n    deliveryTime: string;\r\n\r\n    constructor(init?: Partial<AttemptedJob>) {\r\n        Object.assign(this, init);\r\n\r\n        // get blobs of all images\r\n        this.signature = this.b64ToBlob(this.signatureB64);\r\n        this.photo = this.b64ToBlob(this.photoB64);\r\n        this.notePhotos = _map(this.notePhotosB64, (photo) => this.b64ToBlob(photo));\r\n\r\n        // initialise notes as Note instances\r\n        if (init.note !== undefined && init.note.length) {\r\n            this.note = _map(init.note, (note) => new Note(note));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns full job details with file variables in base64.\r\n     * TODO: To be removed once binary data can be sent to server\r\n     *\r\n     * @returns {*}  JSON object\r\n     */\r\n    withBase64(): any {\r\n        return Object.assign({\r\n            notePhotos: _map(this.notePhotosB64, (photo) => this.trimB64Uri(photo)),\r\n            signature: this.trimB64Uri(this.signatureB64),\r\n            photo: this.trimB64Uri(this.photoB64),\r\n        }, this.getJobDetails());\r\n    }\r\n\r\n    /**\r\n     * Returns full job details with file variables in buffer\r\n     *\r\n     * @returns {*}  JSON object\r\n     */\r\n    withBuffer(): any {\r\n        return Object.assign({\r\n            notePhotos: this.notePhotos,\r\n            signature: this.signature,\r\n            photo: this.photo,\r\n        }, this.getJobDetails());\r\n    }\r\n\r\n    /**\r\n     * Returns job details without file variables\r\n     *\r\n     * @returns {*}  JSON object\r\n     */\r\n    private getJobDetails(): any {\r\n        return {\r\n            jobId: this.jobId,\r\n            delivered: this.delivered,\r\n            note: _map(this.note, (note) => note.toJSON()),\r\n            items: this.items,\r\n            attemptedByDriver: this.attemptedByDriver,\r\n            attemptedByVehicle: this.attemptedByVehicle,\r\n            deliveryTime: this.deliveryTime,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove URI portion of the base64 string\r\n     *\r\n     * @private\r\n     * @param {string} b64Data  Base64 string\r\n     * @returns {string}  Base64 string without URI information\r\n     * @example trimB64Uri(data:image/png;charset=utf-8;base64,/9j/4) // returns `/9j/4`\r\n     */\r\n    private trimB64Uri(b64Data: string): string {\r\n        b64Data = _trim(b64Data);\r\n        if (!b64Data) { // exit function if data is empty or missing\r\n            return undefined;\r\n        } else if (b64Data.indexOf(';base64,')) { // remove mimetype if any\r\n            return b64Data.split(';base64,').pop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts base64 strings to blob object\r\n     *\r\n     * @private\r\n     * @param {string} b64Data  Base64 string\r\n     * @param {string} [contentType='image/jpeg']  Blob type\r\n     * @returns {Blob}\r\n     * @see {@link https://stackoverflow.com/a/16245768/804702}\r\n     */\r\n    private b64ToBlob(b64Data: string, contentType = 'image/jpeg'): Blob {\r\n        const sliceSize = 512;\r\n\r\n        b64Data = this.trimB64Uri(b64Data);\r\n        if (!b64Data) { // exit function if data is empty or missing\r\n            return undefined;\r\n        }\r\n\r\n        const byteCharacters = atob(b64Data);\r\n        const byteArrays = [];\r\n\r\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n            const byteNumbers = new Array(slice.length);\r\n            for (let i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n            byteArrays.push(byteArray);\r\n        }\r\n\r\n        return new Blob(byteArrays, { type: contentType });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/classes/job.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { remove as _remove, isEqual as _isEqual, capitalize as _capitalize, find as _find } from 'lodash-es';\r\nimport * as moment from 'moment';\r\n\r\nimport { Globals, ItemInputMethod, StorageKey } from '../../globals';\r\nimport { AuthResponse } from './auth-response';\r\nimport { AttemptedJob, Job, JobStatus } from '../classes/job';\r\nimport { GeolocationProvider } from '../geolocation/geolocation';\r\nimport { LoadingProvider } from '../loading/loading';\r\nimport { NotificationProvider } from '../notification/notification';\r\nimport { StorageProvider } from '../storage/storage';\r\nimport { WebsocketPurpose, WebsocketEvent, WebsocketProvider } from '../websocket/websocket';\r\nimport { JobsApi } from '../driver-rest/driver-rest';\r\nimport { VehicleApi } from '../driver-rest/driver-rest';\r\n\r\n@Injectable()\r\nexport class UserDriverProvider {\r\n    name: string;\r\n    vehicleId: string;\r\n    vehiclePlateNumber: string;\r\n    vehicleUserGroup: string;\r\n\r\n    jobs: Job[] = [];\r\n    currentJob: Job;\r\n\r\n    isSyncing: boolean = false; // indicates whether the device is currently syncing to server\r\n    DATE_FORMAT: string = 'DD/MM/YYYY';\r\n\r\n    constructor(\r\n        public alertCtrl: AlertController,\r\n        public geolocation: GeolocationProvider,\r\n        public jobsApi: JobsApi,\r\n        public loading: LoadingProvider,\r\n        public notify: NotificationProvider,\r\n        public storage: StorageProvider,\r\n        public vehicleApi: VehicleApi,\r\n        public websocket: WebsocketProvider,\r\n    ) { }\r\n\r\n    /**\r\n     * Initialise driver. This function should only be called once\r\n     *\r\n     * @param {AuthResponse} userDetails  User object from server\r\n     * @returns {Promise<void>}\r\n     */\r\n    initDriver(userDetails: AuthResponse): void {\r\n        console.log('[INIT] Initialising driver');\r\n\r\n        this.setDriver(userDetails);\r\n\r\n        this.initWebsocketEvents();\r\n        this.geolocation.start(this.vehicleId, this.vehiclePlateNumber, this.vehicleUserGroup);\r\n    }\r\n\r\n    /**\r\n     * Set user details based on settings from server\r\n     *\r\n     * @private\r\n     * @param {AuthResponse} userDetails  User object from server\r\n     */\r\n    setDriver(userDetails: AuthResponse): Promise<void> {\r\n        console.log('[INIT] Setting driver variables and uploading offline jobs');\r\n\r\n        this.name = userDetails.fullname;\r\n        this.vehicleId = userDetails.vehicleId;\r\n        this.vehiclePlateNumber = userDetails.vehiclePlateNumber;\r\n        this.vehicleUserGroup = userDetails.vehicleUserGroup;\r\n\r\n        // save these parameters in case the geolocation stated failed\r\n        // so that on the app permission page, restart the geolocation tracking\r\n        Globals.user.vehicleId = this.vehicleId;\r\n        Globals.user.vehiclePlateNumber = this.vehiclePlateNumber;\r\n        Globals.user.vehicleUserGroup = this.vehicleUserGroup;\r\n\r\n        this.configureFeatures(userDetails);\r\n\r\n        // even though uploadOfflineJobs also calls getJobsFromServer, but there is a\r\n        // chance where it doesn't call getJobsFromServer, so it's better to upload\r\n        // offline jobs only after getting full job list from server\r\n        return this.getJobsFromServer().then(this.uploadOfflineJobs).catch(() => { });\r\n    }\r\n\r\n    /**\r\n     * Reset driver-specific variables\r\n     */\r\n    resetDriver(): void {\r\n        this.name = undefined;\r\n        this.vehicleId = undefined;\r\n        this.vehiclePlateNumber = undefined;\r\n        this.vehicleUserGroup = undefined;\r\n\r\n        this.jobs = [];\r\n        this.currentJob = undefined;\r\n\r\n        this.geolocation.stop();\r\n    }\r\n\r\n    /**\r\n     * Function to call at every job attempt. Process is as such:\r\n     *  1. Attempted job is stored on the device storage.\r\n     *  2. If save is successful, return. Otherwise, continue.\r\n     *  3. Send request to API\r\n     *  4. If API request fails, return error. Otherwise, continue.\r\n     *\r\n     * @param {AttemptedJob} attemptedJob  Job that was attempted\r\n     * @returns {Promise<void>}\r\n     */\r\n    jobAttempt(attemptedJob: AttemptedJob): Promise<void> {\r\n        // store in local database\r\n        const timeNow = moment();\r\n        return this.uploadOfflineJobs().catch((err) => {\r\n            console.log('[ATTEMPT] Ignoring error from upload offline jobs before attempt', err);\r\n        }).then(() => {\r\n            // send request to server\r\n            const attemptApi = this.jobsApi.attempt(attemptedJob).then((job) => this.onUpdateJob(job));\r\n\r\n            if (Globals.features.enableOfflineSync === false) { // immediately return server response if feature is not enabled\r\n                return attemptApi;\r\n            } else {\r\n                console.log(`[ATTEMPT] Saving job into database ${attemptedJob.jobId}`);\r\n                return this.storage.insertJob({\r\n                    jobId: attemptedJob.jobId,\r\n                    attemptedByDriver: this.name,\r\n                    attemptedByVehicle: this.vehiclePlateNumber,\r\n                    delivered: attemptedJob.delivered,\r\n                    deliveryTime: timeNow.toISOString(),\r\n                    signatureB64: attemptedJob.signatureB64,\r\n                    photoB64: attemptedJob.photoB64,\r\n                    notePhotosB64: attemptedJob.notePhotosB64,\r\n                    note: attemptedJob.note,\r\n                    items: attemptedJob.items,\r\n                }).then((insertedId) => {\r\n                    // assume job is saved successfully and update job list on local device\r\n                    const actualJob = this.jobs.find((job) => (job.Id === attemptedJob.jobId));\r\n                    this.onUpdateJob({\r\n                        Id: attemptedJob.jobId,\r\n                        Status: actualJob.estimateStatus(attemptedJob.delivered, timeNow.toISOString()),\r\n                        ActualDeliveryTime: timeNow.toDate(),\r\n                        NoteFromDriver: attemptedJob.note,\r\n                    });\r\n\r\n                    // allow user to continue without waiting for request to complete\r\n                    attemptApi\r\n                        .then(() => this.storage.deleteJob(insertedId))\r\n                        .catch((e) => console.log('[ATTEMPT] Failed to send request to server', e));\r\n                }).catch(() => {\r\n                    // since job cannot be saved, return attemptJob promise\r\n                    return attemptApi;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get list of all attempted jobs in the storage\r\n     *\r\n     * @returns {Promise<AttemptedJob[]>}\r\n     */\r\n    getOfflineJobs(): Promise<AttemptedJob[]> {\r\n        if (Globals.features.enableOfflineSync === false) {\r\n            return Promise.reject('Offline sync feature is not enabled.');\r\n        }\r\n\r\n        return this.storage.getAllJobs().then((results: AttemptedJob[]) => results.map((job) => new AttemptedJob(job)));\r\n    }\r\n\r\n    /**\r\n     * Upload all attempted jobs in the storage to the server\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    uploadOfflineJobs(): Promise<void> {\r\n        if (Globals.features.enableOfflineSync === false) {\r\n            return Promise.reject('Offline sync feature is not enabled.');\r\n        }\r\n\r\n        console.log('Uploading offline jobs');\r\n        if (this.isSyncing === true) {\r\n            return this.notify.error('Currently uploading data to server. Please try again 5 minutes later.').then(() => { });\r\n        }\r\n\r\n        this.isSyncing = true;\r\n        return this.getOfflineJobs().then((jobs) => {\r\n            this.isSyncing = false;\r\n            if (jobs.length > 0) {\r\n                return this.jobsApi.sync(jobs)\r\n                    .then(() => this.getJobsFromServer())\r\n                    .then(() => { this.storage.deleteAllJobs(); });\r\n            } else {\r\n                return Promise.resolve();\r\n            }\r\n        }).catch((err) => {\r\n            this.isSyncing = false;\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Find the next pending job in the job list\r\n     */\r\n    updateCurrentJob(): void {\r\n        this.currentJob = this.jobs.find((job) => job.isPending());\r\n    }\r\n\r\n    /**\r\n     * Change plate number of the vehicle that is assigned to the driver\r\n     *\r\n     * @param {string} newPlateNumber  New plate number\r\n     * @returns {Promise<string>}  Returns error (if any)\r\n     */\r\n    updatePlateNumber(newPlateNumber: string): Promise<void> {\r\n        return this.vehicleApi.update(this.vehicleId, { PlateNumber: newPlateNumber });\r\n    }\r\n\r\n    /**\r\n     * Check whether another job needs to be done first.\r\n     * Criteria:\r\n     *  1. `job` is a delivery of a shipment\r\n     *  2. The shipment has a pickup that is not done\r\n     *\r\n     * @param {Job} job\r\n     * @returns {boolean}  True if another job that needs to be done first has not complete\r\n     */\r\n    isPreviousJobComplete(job: Job): boolean {\r\n        if (job.isPickup() === true) {\r\n            return true; // if job is pickup, it doesn't matter what the previous jobs statuses are\r\n        } else {\r\n            return !this.jobs.find((otherJob) => {\r\n                return otherJob.DeliveryMasterId === job.DeliveryMasterId &&\r\n                    otherJob.Id !== job.Id &&\r\n                    otherJob.isPickup() &&\r\n                    otherJob.JobSequence <= job.JobSequence &&\r\n                    !otherJob.isCompleted();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get list of jobs from the server\r\n     *\r\n     * @private\r\n     * @param {string} [loaderMsg='Updating jobs']  Custom loader message\r\n     * @returns {Promise<void>}\r\n     */\r\n    private getJobsFromServer(loaderMsg: string = 'Updating jobs'): Promise<void> {\r\n        const loader = this.loading.show(loaderMsg);\r\n        const today = moment().toISOString();\r\n\r\n        let showNotification = false;\r\n        const previousJobInfo = Globals.user.previousJobsInfo;\r\n        const [joblength = '', jobdate = ''] = previousJobInfo ? previousJobInfo.split(',') : [];\r\n\r\n        return this.jobsApi.get({ date: today }).then((jobs) => {\r\n            if (jobs.length !== Number(joblength) && (moment(jobdate, this.DATE_FORMAT).isSame(moment(), 'day'))) {\r\n                // show notification only if job count is different from the last recent load and date is today\r\n                showNotification = true;\r\n            } else if (this.jobs.length > 0) {\r\n                // check if need to show notification by checking the jobs in new list exists in local variable\r\n                for (let i = 0; i < jobs.length; i++) {\r\n                    const jobExists = _find(this.jobs, { Id: jobs[i].Id });\r\n                    if (!jobExists) {\r\n                        showNotification = true; // major job change\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.jobs = jobs.sort((a, b) => (a.EngineRouteSeqNum < b.EngineRouteSeqNum) ? -1 : 1);\r\n            this.updateCurrentJob();\r\n            loader.dismiss();\r\n\r\n            if (showNotification) {\r\n                const notificationText = 'Updated jobs list for today';\r\n                this.notify.local(notificationText);\r\n                this.notify.info(notificationText);\r\n            }\r\n\r\n            Globals.user.previousJobsInfo = `${jobs.length.toString()},${moment().format(this.DATE_FORMAT)}`;\r\n            this.storage.setKeyValue(StorageKey.PreviousJobsInfo, Globals.user.previousJobsInfo);\r\n\r\n        }).catch((err) => {\r\n            loader.dismiss();\r\n            const alert = this.alertCtrl\r\n                .create({\r\n                    title: 'Error',\r\n                    subTitle: `Unable to get updated job list.<br>Please log out and log in again. Server Error: ${err}`,\r\n                    buttons: ['OK'],\r\n                });\r\n            alert.present();\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Override global settings according to server provided settings\r\n     *\r\n     * @private\r\n     * @param {AuthResponse} serverSettings  Settings from server\r\n     */\r\n    private configureFeatures(serverSettings: AuthResponse): void {\r\n        serverSettings.statusLabels.forEach((status) => {\r\n            const dictionary = Globals.jobStatusPair[status.value];\r\n            if (dictionary) {\r\n                dictionary.title = _capitalize(status.label);\r\n            }\r\n        });\r\n\r\n        Globals.setting.note.maxNumPhoto = serverSettings.noteOptions.photo.maxCount;\r\n        Globals.setting.note.optionRequired = serverSettings.noteOptions.option.required;\r\n        Globals.setting.note.options = serverSettings.noteOptions.option.list;\r\n\r\n        Globals.setting.pod.photoRequired = serverSettings.podOptions.photo.required;\r\n\r\n        Globals.setting.item.defaultInput = (serverSettings.itemOptions.input.default === 'BARCODE') ? ItemInputMethod.Barcode : ItemInputMethod.Keyboard;\r\n        Globals.setting.item.allowSwitchInput = serverSettings.itemOptions.input.allowToggle;\r\n        Globals.setting.item.acceptedCodes = serverSettings.itemOptions.barcode.formats;\r\n    }\r\n\r\n    /**\r\n     * Initialise all driver-related websocket message events\r\n     *\r\n     * @private\r\n     */\r\n    private initWebsocketEvents(): void {\r\n        this.websocket.onJSON(WebsocketEvent.Vehicle, (msg) => {\r\n            if (msg.purpose === WebsocketPurpose.Update || msg.purpose === WebsocketPurpose.Create) {\r\n                msg.data.forEach((vehicle) => this.onUpdateVehicle(vehicle));\r\n            }\r\n        });\r\n\r\n        this.websocket.onJSON(WebsocketEvent.DeliveryPlan, (msg) => {\r\n            if (msg.purpose === WebsocketPurpose.Update || msg.purpose === WebsocketPurpose.Create) {\r\n                const todayPlanChanged = msg.data.indexOf(moment().format('YYYY-MM-DD'));\r\n                if (todayPlanChanged > -1) {\r\n                    this.getJobsFromServer();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.websocket.onJSON(WebsocketEvent.DeliveryMaster, (msg) => {\r\n            if (msg.purpose === WebsocketPurpose.Delete) {\r\n                this.onDeleteJob(msg.data);\r\n            }\r\n        });\r\n\r\n        this.websocket.onJSON(WebsocketEvent.DeliveryDetail, (msg) => {\r\n            if (msg.purpose === WebsocketPurpose.Update || msg.purpose === WebsocketPurpose.Attempted) {\r\n                msg.data.forEach((job) => this.onUpdateJob(job));\r\n            }\r\n        });\r\n\r\n        this.websocket.onJSON(WebsocketEvent.DeliveryItem, (msg) => {\r\n            if (msg.purpose === WebsocketPurpose.Create) {\r\n                const jobId = Number(msg.data[0].DeliveryDetailId);\r\n                this.onUpdateJob({\r\n                    Id: jobId,\r\n                    DeliveryItems: msg.data,\r\n                });\r\n            } else if (msg.purpose === WebsocketPurpose.Delete) {\r\n                msg.data.forEach((deletedItems) => {\r\n                    const jobId = Number(deletedItems.DeliveryDetailId);\r\n                    const oldItems = this.jobs.find((job) => job.Id === jobId).DeliveryItems;\r\n                    this.onUpdateJob({\r\n                        Id: jobId,\r\n                        DeliveryItems: oldItems.filter((item) => deletedItems.Ids.indexOf(item.Id) < 0), // get list of deliveryitems that is not deleted\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Websocket event: New vehicle is assigned.\r\n     * Note: This event will not be called for the scenario when the originally\r\n     * assigned vehicle is later assigned to another driver\r\n     *\r\n     * @private\r\n     * @param {{ Id: string, PlateNumber: string }} newVehicle  Vehicle that is newly assigned\r\n     */\r\n    private onUpdateVehicle(newVehicle: { Id: string, PlateNumber: string, UserGroup: string }): void {\r\n        const oldVehicleId = this.vehicleId;\r\n        this.vehicleId = newVehicle.Id;\r\n        this.vehiclePlateNumber = newVehicle.PlateNumber;\r\n        this.vehicleUserGroup = newVehicle.UserGroup;\r\n\r\n        if (oldVehicleId !== this.vehicleId) {\r\n            console.log(`[WEBSOCKET] Changed vehicle assignment from ${oldVehicleId} to ${this.vehicleId}`);\r\n            this.getJobsFromServer('Updating jobs due to change of vehicle...');\r\n        }\r\n\r\n        // have to set these variables again\r\n        this.geolocation.start(this.vehicleId, this.vehiclePlateNumber, this.vehicleUserGroup);\r\n    }\r\n\r\n    /**\r\n     * Websocket event: Any job modifications, including DeliveryItem changes\r\n     *\r\n     * @private\r\n     * @param {Job} newJob  New job details\r\n     */\r\n    private onUpdateJob(newJob: Partial<Job>) {\r\n        newJob.Id = Number(newJob.Id); // ensure DeliveryDetail Id doesn't get overwritten with string\r\n        const jobToUpdate = this.jobs.find((job) => job.Id === newJob.Id);\r\n        Object.assign(jobToUpdate, newJob);\r\n\r\n        // updated affected jobs (in case update job function is called when driver is offline)\r\n        if (jobToUpdate.isUnsuccessful() === true && jobToUpdate.isPickup() === true) {\r\n            this.jobs.forEach((job) => {\r\n                if (jobToUpdate.DeliveryMasterId === job.DeliveryMasterId &&\r\n                    jobToUpdate.JobSequence <= job.JobSequence &&\r\n                    job.isDelivery() && job.isPending()) {\r\n                    job.Status = JobStatus.Unsuccessful;\r\n                }\r\n            });\r\n        }\r\n\r\n        // don't show notifications for change verification code and update expected to be late status\r\n        if (newJob.DeliveryMasterId) {\r\n            // TODO: Show only one at any one time\r\n            // this.notify.info(`Job ${newJob.DeliveryMasterId} (${newJob.JobType}) has been updated`);\r\n        }\r\n\r\n        // check if there is a need to update current job\r\n        if (_isEqual(this.currentJob, jobToUpdate.Id) === false) {\r\n            this.updateCurrentJob();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Websocket event: Delete existing job\r\n     *\r\n     * @private\r\n     * @param {string[]} orderIds  List of DeliveryMasterId\r\n     */\r\n    private onDeleteJob(orderIds: string[]): void {\r\n        let shouldUpdateCurrentJob = false;\r\n        _remove(this.jobs, (job) => {\r\n            if (orderIds.indexOf(job.DeliveryMasterId) > -1) {\r\n                this.notify.info(`Job ${job.DeliveryMasterId} (${job.JobType}) has been removed.`);\r\n\r\n                // check if the current job was removed\r\n                if (!shouldUpdateCurrentJob && orderIds.indexOf(this.currentJob.DeliveryMasterId) > -1) {\r\n                    shouldUpdateCurrentJob = true;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (shouldUpdateCurrentJob) {\r\n            this.updateCurrentJob();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user-driver.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\r\n\r\nimport { Globals, StorageKey } from '../../globals';\r\nimport { JobsTable, IJobsColumns, KeyValueTable } from './sql-table';\r\n\r\n@Injectable()\r\nexport class StorageProvider {\r\n    private databaseName = 'simtech.opms.lml';\r\n\r\n    private tableKeyVal: KeyValueTable;\r\n    private tableJobs: JobsTable;\r\n\r\n    constructor(\r\n        public sqlite: SQLite,\r\n    ) { }\r\n\r\n    /**\r\n     * Establishes connection to the database and creates all tables\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    init(): Promise<void> {\r\n        return this.sqlite.create({\r\n            name: this.databaseName,\r\n            location: 'default',\r\n\r\n        }).then((db: SQLiteObject) => {\r\n            this.tableKeyVal = new KeyValueTable(db);\r\n            this.tableJobs = new JobsTable(db);\r\n            return this.createTables();\r\n\r\n        }).then(() => {\r\n            if (Globals.features.showChangeUrl) {\r\n                return this.getKeyValue(StorageKey.Url).then((url) => {\r\n                    if (url !== undefined) {\r\n                        Globals.url = url;\r\n                    }\r\n                });\r\n            } else {\r\n                // overwrite existing database value because driver can no longer change url\r\n                return this.setKeyValue(StorageKey.Url, Globals.default.url).then(() => { });\r\n            }\r\n        }).then(() => {\r\n            return this.getKeyValue(StorageKey.ApiToken).then((token) => {\r\n                if (token !== undefined) {\r\n                    Globals.user.token = token;\r\n                }\r\n            });\r\n        }).then(() => {\r\n            return this.getKeyValue(StorageKey.Username).then((username) => {\r\n                if (username !== undefined) {\r\n                    Globals.user.username = username;\r\n                }\r\n            });\r\n        }).then(() => {\r\n            return this.getKeyValue(StorageKey.PreviousJobsInfo).then((previousjobsinfo) => {\r\n                if (previousjobsinfo !== undefined) {\r\n                    Globals.user.previousJobsInfo = previousjobsinfo;\r\n                }\r\n            });\r\n        }).catch(() => { }); // catch for web usage\r\n    }\r\n\r\n    /**\r\n     * Insert a job into the `jobs` table\r\n     *\r\n     * @param {IJobsColumns} job  Job to insert\r\n     * @returns {Promise<number>}  Row ID\r\n     */\r\n    insertJob(job: IJobsColumns): Promise<number> {\r\n        if (this.tableJobs === undefined) { return Promise.reject('Tables are not initialised'); }\r\n\r\n        return this.tableJobs.sqlInsert(job);\r\n    }\r\n\r\n    /**\r\n     * Get all jobs from `jobs` table\r\n     *\r\n     * @returns {Promise<IJobsColumns[]>}\r\n     */\r\n    getAllJobs(): Promise<IJobsColumns[]> {\r\n        if (this.tableJobs === undefined) { return Promise.reject('Tables are not initialised'); }\r\n\r\n        return this.tableJobs.sqlSelect().then((results: IJobsColumns[]) => {\r\n            return results.map((row) => {\r\n                // this parsing must be done manually since javascript has no context of what is object at runtime\r\n                row.delivered = this.toBool(row.delivered);\r\n                row.notePhotosB64 = this.toJSON(row.notePhotosB64);\r\n                row.note = this.toJSON(row.note);\r\n                row.items = this.toJSON(row.items);\r\n                return row;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete all jobs from `jobs` table\r\n     *\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    deleteAllJobs(): Promise<number> {\r\n        if (this.tableJobs === undefined) { return Promise.reject('Tables are not initialised'); }\r\n\r\n        return this.tableJobs.sqlDeleteAll();\r\n    }\r\n\r\n    /**\r\n     * Delete one job based on row ID from `jobs` table\r\n     *\r\n     * @param {number} id  Row ID\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    deleteJob(rowId: number): Promise<number> {\r\n        if (this.tableJobs === undefined) { return Promise.reject('Tables are not initialised'); }\r\n\r\n        return this.tableJobs.sqlDelete(rowId);\r\n    }\r\n\r\n    /**\r\n     * Set value of particular key\r\n     *\r\n     * @param {string} key  Unique identifier\r\n     * @param {string} value  Value that is linked to the `key`\r\n     * @returns {Promise<number>}  Number of rows affected\r\n     */\r\n    setKeyValue(key: string, value: string): Promise<number> {\r\n        // resolve for setKeyValue if table is not initialised\r\n        if (this.tableKeyVal === undefined) { return Promise.resolve(undefined); }\r\n\r\n        return this.tableKeyVal.sqlSetValue(key, value);\r\n    }\r\n\r\n    /**\r\n     * Get value that is mapped to a particular key\r\n     *\r\n     * @param {string} key  Unique identifier\r\n     * @returns {Promise<string>}  Value that is linked to the `key`\r\n     */\r\n    getKeyValue(key: string): Promise<string> {\r\n        // resolve for setKeyValue if table is not initialised\r\n        if (this.tableKeyVal === undefined) { return Promise.resolve(undefined); }\r\n\r\n        return this.tableKeyVal.sqlGetValue(key);\r\n    }\r\n\r\n    /**\r\n     * Parse column into object.\r\n     * If `val` is JSON object, `val` is returned as an object.\r\n     * If `val` is not JSON object, `val` is returned as it is\r\n     *\r\n     * @private\r\n     * @param {*} val  Value of any column\r\n     * @returns {*}\r\n     */\r\n    private toJSON(val: any): any {\r\n        try {\r\n            return JSON.parse(val);\r\n        } catch (e) {\r\n            return val;\r\n        }\r\n    }\r\n    /**\r\n     * Parse column into boolean\r\n     *\r\n     * @private\r\n     * @param {any} val  Value of any column\r\n     * @returns {boolean}\r\n     */\r\n    private toBool(val: any): boolean {\r\n        return (val === 'true' || val === true) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Create tables if does not exist. If exist, check if the table is the latest version. If\r\n     * table version is outdated, re-create the table\r\n     *\r\n     * @private\r\n     * @returns {Promise<void>}\r\n     */\r\n    private createTables(): Promise<void> {\r\n        // always try to create key-value table\r\n        return this.tableKeyVal.sqlCreate().then(() => {\r\n            // get current version number for jobs table\r\n            return this.tableKeyVal.sqlGetValue(this.tableJobs.name);\r\n        }).then((currVersion) => {\r\n            console.log(`[SQL] Current jobs table database version ${currVersion}`);\r\n\r\n            // check if the current table is outdated\r\n            if (currVersion === undefined || Number(currVersion) < Number(this.tableJobs.version)) {\r\n                console.log(`[SQL] Updating jobs table to version ${this.tableJobs.version}`);\r\n                // if outdated or does not exist, create the table\r\n                return this.tableJobs.sqlDrop().then(() => {\r\n                    return this.tableJobs.sqlCreate();\r\n                }).then(() => {\r\n                    return this.tableKeyVal.sqlSetValue(this.tableJobs.name, String(this.tableJobs.version));\r\n                });\r\n            }\r\n        }).then(() => { });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/storage/storage.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BackgroundMode } from '@ionic-native/background-mode';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { trim as _trim } from 'lodash-es';\r\nimport * as moment from 'moment';\r\n\r\nimport { Globals, StorageKey } from '../../globals';\r\nimport { AuthResponse } from './auth-response';\r\nimport { AuthApi } from '../driver-rest/driver-rest';\r\nimport { NotificationProvider } from '../notification/notification';\r\nimport { UserDriverProvider } from '../user/user-driver';\r\nimport { StorageProvider } from '../storage/storage';\r\nimport { OperatingSystem, DiagnosticProvider } from '../diagnostic/diagnostic';\r\nimport { WebsocketEvent, WebsocketProvider } from '../websocket/websocket';\r\n\r\n@Injectable()\r\nexport class AuthProvider {\r\n    /**\r\n     * Observable to notify whenever there is authenticated status change\r\n     *\r\n     * @type {BehaviorSubject<boolean>}\r\n     */\r\n    notifier: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(undefined);\r\n    username: string;\r\n    forceChangePassword: boolean = false;\r\n\r\n    constructor(\r\n        public authApi: AuthApi,\r\n        public backgroundMode: BackgroundMode,\r\n        public diagnostic: DiagnosticProvider,\r\n        public driver: UserDriverProvider,\r\n        public notify: NotificationProvider,\r\n        public storage: StorageProvider,\r\n        public websocket: WebsocketProvider,\r\n    ) { }\r\n\r\n    /**\r\n     * Logs into server\r\n     *\r\n     * @param {string} username  Username of user\r\n     * @param {string} password  Password of user\r\n     * @returns {Promise<void>}  Throws error (if unable to authenticate)\r\n     */\r\n    login(username: string, password: string): Promise<void> {\r\n        return this.authApi.login({ username: username, password: password })\r\n            .then((userDetails: AuthResponse) => {\r\n                this.initUser(userDetails);\r\n                this.driver.initDriver(userDetails); // assume user is always driver\r\n            })\r\n            .catch((err) => {\r\n                this.resetUser(); // clear any existing data if any\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Logs out of server. If there is no Internet, variables will still\r\n     * be reset, but when Internet is established again, the user will be\r\n     * redirected to home page\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    logout(): Promise<void> {\r\n        if (this.username === undefined) {\r\n            this.notifier.next(false); // in case session is removed on server side while using\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.authApi.logout().then(() => {\r\n            this.resetUser();\r\n        }).catch(() => {\r\n            this.resetUser();\r\n            // ignore any server errors\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if user is logged in\r\n     *\r\n     * @returns {Promise<void>}  Throws error (if unable to authenticate)\r\n     */\r\n    isLoggedIn(): Promise<void> {\r\n        return this.authApi.isLoggedIn()\r\n            .then((userDetails) => {\r\n                this.setUser(userDetails);\r\n                this.driver.setDriver(userDetails); // assume user is always driver\r\n            })\r\n            .catch((err) => {\r\n                this.resetUser();\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Change user password\r\n     *\r\n     * @param {string} oldPw  Current password\r\n     * @param {string} newPw  New password\r\n     * @returns {Promise<void>}\r\n     */\r\n    changePassword(oldPw: string, newPw: string): Promise<void> {\r\n        return this.authApi.resetPassword({\r\n            oldPassword: oldPw,\r\n            newPassword: newPw,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise user, regardless of role. This function should only be called once\r\n     *\r\n     * @private\r\n     * @param {AuthResponse} userDetails  User object from server\r\n     */\r\n    private initUser(userDetails: AuthResponse): void {\r\n        console.log('[INIT] Initialising user');\r\n\r\n        this.setUser(userDetails);\r\n\r\n        if (this.diagnostic.deviceOS === OperatingSystem.iOS) {\r\n            // android can listen to websocket messages in the background\r\n            this.backgroundMode.enable();\r\n        }\r\n\r\n        this.initWebsocketEvents();\r\n    }\r\n\r\n    /**\r\n     * Set user details based on settings from server\r\n     *\r\n     * @private\r\n     * @param {AuthResponse} userDetails  User object from server\r\n     */\r\n    private setUser(userDetails: AuthResponse): void {\r\n        console.log('[INIT] Setting user variables');\r\n\r\n        Globals.user.token = userDetails.token;\r\n        this.storage.setKeyValue(StorageKey.ApiToken, Globals.user.token);\r\n\r\n        Globals.user.username = userDetails.username;\r\n        this.username = Globals.user.username;\r\n        this.storage.setKeyValue(StorageKey.Username, Globals.user.username);\r\n\r\n        this.forceChangePassword = userDetails.forceChangePassword;\r\n\r\n        this.synchroniseDate(userDetails.serverDate);\r\n\r\n        this.notifier.next(true);\r\n    }\r\n\r\n    /**\r\n     * Reset user variables, regardless of role\r\n     *\r\n     * @private\r\n     */\r\n    private resetUser(): void {\r\n        Globals.user.token = '';\r\n        Globals.user.previousJobsInfo = '';\r\n        Globals.user.vehicleId = '';\r\n        Globals.user.vehiclePlateNumber = '';\r\n        Globals.user.vehicleUserGroup = '';\r\n        this.storage.setKeyValue(StorageKey.ApiToken, '');\r\n        this.storage.setKeyValue(StorageKey.PreviousJobsInfo, '');\r\n\r\n        this.username = undefined;\r\n        // for the convenience of subsequent log in, no need to reset storage username\r\n\r\n        this.websocket.disconnect();\r\n\r\n        this.driver.resetDriver();\r\n\r\n        if (this.backgroundMode.isEnabled) {\r\n            this.backgroundMode.disable();\r\n        }\r\n\r\n        // even though api intercepter will update notifier to false, but in case no internet connectivity when logout\r\n        this.notifier.next(false);\r\n    }\r\n\r\n    /**\r\n     * Synchronise local device datetime with server datetime\r\n     *\r\n     * @private\r\n     * @param {string} serverTime  Date in ISO8601 format\r\n     */\r\n    private synchroniseDate(serverTime: string): void {\r\n        serverTime = _trim(serverTime);\r\n        if (serverTime) {\r\n            const offset = new Date(serverTime).getTime() - Date.now();\r\n            (moment as any).now = () => { // type casting is meant to overrule the readonly rule\r\n                return offset + Date.now();\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialise all generic users websocket message events\r\n     *\r\n     * @private\r\n     */\r\n    private initWebsocketEvents(): void {\r\n        this.websocket.connect();\r\n        this.websocket.onJSON(WebsocketEvent.Logout, () => {\r\n            this.notify.error('You are forced to log out. You will be redirected to login page.');\r\n            this.resetUser();\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/auth.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { trim as _trim, get as _get } from 'lodash-es';\r\n\r\nimport { AppVersion } from '@ionic-native/app-version';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\n\r\nimport { Globals } from '../../globals';\r\nimport { MiscApi } from '../driver-rest/driver-rest';\r\nimport { NotificationProvider } from '../notification/notification';\r\n\r\n/**\r\n * List of supported operating systems\r\n *\r\n * @enum {string}\r\n */\r\nexport enum OperatingSystem {\r\n    Android = 'android',\r\n    iOS = 'ios',\r\n}\r\n\r\n@Injectable()\r\nexport class DiagnosticProvider {\r\n    /**\r\n     * Observable to notify whenever gps is turned on or off\r\n     *\r\n     * @type {BehaviorSubject<boolean>}\r\n     */\r\n    hasLocationNotifier: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    deviceOS: OperatingSystem;\r\n    deviceVersion: number;\r\n\r\n    constructor(\r\n        public appVersion: AppVersion,\r\n        public diagnostic: Diagnostic,\r\n        public miscApi: MiscApi,\r\n        public notify: NotificationProvider,\r\n        public platform: Platform,\r\n    ) {\r\n        this.platform.ready().then(() => {\r\n            // get device operating system\r\n            if (this.platform.is(OperatingSystem.Android) === true) {\r\n                this.deviceOS = OperatingSystem.Android;\r\n            } else if (this.platform.is(OperatingSystem.iOS) === true) {\r\n                this.deviceOS = OperatingSystem.iOS;\r\n            }\r\n\r\n            // get device os version\r\n            const platforms = this.platform.versions();\r\n            this.deviceVersion = _get(platforms[this.deviceOS], 'num');\r\n\r\n            // registerLocationStateChangeHandler only detect GPS on Android platform and Location service On or Off on iOS platform\r\n            this.diagnostic.registerLocationStateChangeHandler((state) => {\r\n                // getLocationAuthorizationStatus can detect location permission status for both iOS and Android platform\r\n                this.diagnostic.getLocationAuthorizationStatus().then((statusPermission) => {\r\n                    const isOnAndroid = (this.deviceOS === OperatingSystem.Android && state !== this.diagnostic.locationMode.LOCATION_OFF && statusPermission !== this.diagnostic.permissionStatus.NOT_REQUESTED);\r\n                    const isOniOS = (this.deviceOS === OperatingSystem.iOS && (statusPermission === this.diagnostic.permissionStatus.GRANTED || statusPermission === this.diagnostic.permissionStatus.GRANTED_WHEN_IN_USE));\r\n                    if (isOnAndroid === true || isOniOS === true) {\r\n                        this.hasLocationNotifier.next(true);\r\n                    } else {\r\n                        this.hasLocationNotifier.next(false);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Compare current installed app version with minimum version specified by server.\r\n     * Default return value is `true` if any error occur\r\n     *\r\n     * @returns {Promise<boolean>}  True if app is updated\r\n     */\r\n    isAppUpdated(): Promise<boolean> {\r\n        if (Globals.features.forceAppUpdate === false) { // assume app is updated if feature is not enabled\r\n            return Promise.resolve(true);\r\n        } else {\r\n            return this.appVersion.getVersionNumber().then((version) => {\r\n                console.log(`[DIAGNOSTIC] Current app version ${version}`);\r\n                if (version === undefined) {\r\n                    return true;\r\n                } else {\r\n                    return this.miscApi.getLatestAppVersion().then((latestVersion) => {\r\n                        console.log(`[DIAGNOSTIC] Latest app version ${latestVersion}`);\r\n                        return this.normalizeVersionNum(version) >= this.normalizeVersionNum(latestVersion);\r\n                    });\r\n                }\r\n            }).catch(() => true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get application package name (e.g. widget id for Android)\r\n     *\r\n     * @returns {Promise<string>}\r\n     */\r\n    getPackageName(): Promise<string> {\r\n        return this.appVersion.getPackageName();\r\n    }\r\n\r\n    /**\r\n     * Check if gps is enabled and if app is permitted to get gps coordinates.\r\n     * `.catch()` is not necessary as no errors will be thrown\r\n     *\r\n     * @returns {Promise<boolean>}  True if gps is enabled and permission given\r\n     */\r\n    hasLocationPermission(): Promise<boolean> {\r\n        return this.diagnostic.isLocationAvailable().then((available) => {\r\n            this.hasLocationNotifier.next(available);\r\n            return available;\r\n        }).catch((err) => this.catch('location', err));\r\n    }\r\n\r\n    /**\r\n     * Check if camera exists and if app is permitted to use camera.\r\n     * `.catch()` is not necessary as no errors will be thrown\r\n     *\r\n     * @returns {Promise<boolean>}  True if camera exists and permission given\r\n     */\r\n    hasCameraPermission(): Promise<boolean> {\r\n        return this.diagnostic.isCameraAvailable().catch((err) => this.catch('camera', err));\r\n    }\r\n\r\n    /**\r\n     * Request for location permission. Toast will appear if app already has permission.\r\n     * `.catch()` is not necessary as no errors will be thrown\r\n     */\r\n    requestLocation(): void {\r\n        this.diagnostic.isLocationAvailable().then((available) => {\r\n            if (available === true) {\r\n                this.hasLocationNotifier.next(available);\r\n                this.notify.info('Location permission is already enabled.');\r\n            } else {\r\n                return this.diagnostic.getLocationAuthorizationStatus()\r\n                    .then((statusPermission) => {\r\n                        this.diagnostic.isLocationEnabled().then((isGpsOn) => {\r\n                            if (this.platform.is('android')) {\r\n                                if (!isGpsOn) {\r\n                                    // For GPS off but permission is on condition Android Platform\r\n                                    this.diagnostic.switchToLocationSettings();\r\n                                } else if (statusPermission === this.diagnostic.permissionStatus.DENIED || statusPermission === this.diagnostic.permissionStatus.DENIED_ALWAYS || statusPermission === this.diagnostic.permissionStatus.NOT_REQUESTED) {\r\n                                    // For location permission is off condition Android Platform\r\n                                    this.diagnostic.switchToLocationSettings();\r\n                                }\r\n                            } else {\r\n                                if (!isGpsOn) {\r\n                                    // For GPS is off on iOS platform\r\n                                    this.notify.info('Please go to Setting >> Privacy >> Location Services to turn on your Location service.');\r\n                                } else if (statusPermission === this.diagnostic.permissionStatus.DENIED || statusPermission === this.diagnostic.permissionStatus.DENIED_ALWAYS || statusPermission === this.diagnostic.permissionStatus.NOT_REQUESTED) {\r\n                                    // For location permission is off condition iOS platform\r\n                                    this.diagnostic.switchToSettings();\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n        }).catch((err) => this.catch('location', err));\r\n    }\r\n\r\n    /**\r\n     * Request for camera permission. Toast will appear if app already has permission.\r\n     * `.catch()` is not necessary as no errors will be thrown\r\n     */\r\n    requestCamera(): void {\r\n        this.diagnostic.isCameraAvailable().then((available) => {\r\n            if (available === true) {\r\n                this.notify.info('Camera permission is already enabled.');\r\n            } else {\r\n                this.diagnostic.requestCameraAuthorization();\r\n            }\r\n        }).catch((err) => this.catch('camera', err));\r\n    }\r\n\r\n    /**\r\n     * Generic error handler. All errors are counted as resolved (i.e. no errors will be re-thrown)\r\n     *\r\n     * @private\r\n     * @param {('location' | 'camera')} permission  Type of permission that caused the error\r\n     * @param {string} err  Error message\r\n     * @returns {boolean}  Returns `true` always\r\n     */\r\n    private catch(permission: 'location' | 'camera', err: string): boolean {\r\n        // ignore error, can't be helped due to device issue\r\n        if (permission === undefined) {\r\n            this.notify.error(`Unable to check ${permission} permission details ${err}`);\r\n        }\r\n        return true; // return true to assume promise is resolved\r\n    }\r\n\r\n    /**\r\n     * Normalises all version numbering for easier comparison. Returns `0` if version\r\n     * provided is invalid (e.g. contains letters)\r\n     *\r\n     * @private\r\n     * @param {string} version  Original version number, can be\r\n     * @returns {number}\r\n     */\r\n    private normalizeVersionNum(version: string): number {\r\n        const normVersion = Number(_trim(version).replace(/\\./g, ''));\r\n        return isNaN(normVersion) ? 0 : normVersion;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/diagnostic/diagnostic.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { get as _get } from 'lodash-es';\r\n\r\nimport { Globals } from '../../globals';\r\n\r\n/**\r\n * Response when requesting for location. Unused properties are omitted\r\n *\r\n * @interface ILocation\r\n * @see {@link https://github.com/transistorsoft/cordova-background-geolocation/wiki/Location-Data-Schema}\r\n */\r\ninterface ILocation {\r\n    coords: { latitude: Number, longitude: Number, accuracy: Number };\r\n}\r\n\r\n@Injectable()\r\nexport class GeolocationProvider {\r\n    private bgGeo;\r\n\r\n    /**\r\n     * API HTTP Method for background sync\r\n     *\r\n     * @type {string}\r\n     */\r\n    private readonly apiMethod: string = 'POST';\r\n\r\n    /**\r\n     * API root property name of request body\r\n     *\r\n     * @type {string}\r\n     */\r\n    private readonly apiRootProperty: string = 'record';\r\n\r\n    /**\r\n     * API request body format for background sync\r\n     *\r\n     * @type {string}\r\n     */\r\n    private readonly apiFormat: string = `{\r\n        \"Lat\": \"<%= latitude %>\",\r\n        \"Lng\": \"<%= longitude %>\",\r\n        \"Accuracy\": \"<%= accuracy %>\",\r\n        \"RecordedTime\": \"<%= timestamp %>\"\r\n    }`;\r\n\r\n    /**\r\n     * Common / universal options for geolocation tracking\r\n     *\r\n     * @type {*}\r\n     */\r\n    private readonly geolocationOptions: any = {\r\n        // Geolocation config\r\n        desiredAccuracy: 0,\r\n        distanceFilter: 10,\r\n        stationaryRadius: 25,\r\n        // set to true to receive debug push notification message when app is terminated or at background mode\r\n        debug: false,\r\n        // turn off 0 (OFF), set to 5 (VERBOSE) to record log, it is used with maxDaysToPersist\r\n        logLevel: 0,\r\n        // set to true to always apply the supplied config\r\n        reset: true,\r\n        // set to false, device will sleep for 300 seconds if device is in 'still' state, then device will wake up to get location to upload to server.\r\n        // set to true, when device is in 'still' state, not update any location. if device exit 'still' state, it will wait for 15 mins to update location.\r\n        pausesLocationUpdatesAutomatically: false, // prevent plugin automatically turning off location services when device is assumed to be stopped\r\n        // Activity Recognition config\r\n        activityRecognitionInterval: 10000,\r\n        stopTimeout: 5,\r\n        // Application config\r\n        stopOnTerminate: false, // set to false, device will still tracking location when user force terminate app by swipe off in iOS platform.\r\n        startOnBoot: true, // set to true, device will tracking location if user force re-start device.\r\n        // iOS\r\n        heartbeatInterval: 60,\r\n        preventSuspend: true,\r\n        locationAuthorizationRequest: 'Always',\r\n        // Android\r\n        foregroundService: true,\r\n        notificationChannelName: 'Location Tracker',\r\n        fastestLocationUpdateInterval: 5000,\r\n        allowIdenticalLocations: true,\r\n        // HTTP / SQLite config\r\n        autoSync: Globals.features.enableGeoTracking, // disable auto sync if feature is not enabled\r\n        httpTimeout: 20000,\r\n        method: this.apiMethod,\r\n        httpRootProperty: this.apiRootProperty,\r\n        locationTemplate: this.apiFormat,\r\n        batchSync: true, // send records in bulk\r\n        maxBatchSize: 5000, // limit max number of records to send to server\r\n        maxDaysToPersist: 2,\r\n        // format is '{DAY(s)} {START_TIME}-{END_TIME}', 1 is Sunday, 7 is Sat\r\n        schedule: [\r\n            '1-7 7:00-23:00',  // Mon-Sun: 7:00am to 11:00pm\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public platform: Platform,\r\n    ) {\r\n        this.platform.ready().then(() => {\r\n            const bgGeo = (<any> window).BackgroundGeolocation;\r\n\r\n            if (bgGeo !== undefined) { // for web usage\r\n                this.bgGeo = bgGeo;\r\n\r\n                // to be removed //\r\n                this.bgGeo.on('location', (msg) => console.log('[LOCATION] onLocation', msg), (e) => console.log('[LOCATION] onLocation', e));\r\n                this.bgGeo.on('http', (msg) => console.log('[LOCATION] onHttp', msg), (e) => console.log('[LOCATION] onHttpErr', e));\r\n                // end //\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start background geolocation tracking. Calling this function multiple times will not\r\n     * affect operations. However, the variables will change accordingly.\r\n     *\r\n     * @param {string} vehicleId  Id of the vehicle that is assigned to driver\r\n     * @param {string} vehiclePlateNumber  Plate number of the vehicle that is assigned to driver\r\n     */\r\n    start(vehicleId: string, vehiclePlateNumber: string, vehicleUserGroup: string): void {\r\n        if (this.bgGeo !== undefined && Globals.features.enableGeoTracking === true) { // for web usage, track only if feature is enabled\r\n            const config = Object.assign({}, this.geolocationOptions, {\r\n                url: `${Globals.url}/rest/data/v2.1/vehicleLog`,\r\n                headers: {\r\n                    [Globals.default.apiHeader]: Globals.user.token,\r\n                },\r\n                extras: {\r\n                    VehicleId: vehicleId,\r\n                    PlateNumber: vehiclePlateNumber,\r\n                    VehicleUserGroup: vehicleUserGroup,\r\n                },\r\n            });\r\n\r\n            this.bgGeo.setConfig(config).then(() => {\r\n                this.bgGeo.start();\r\n            }).catch((err) => console.log('[LOCATION] Unable to start background tracking.', err));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop background geolocation tracking\r\n     */\r\n    stop(): void {\r\n        if (this.bgGeo !== undefined && Globals.features.enableGeoTracking === true) { // for web usage, track only if feature is enabled\r\n            this.bgGeo.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current location details. `this.start()` is **not** required in order\r\n     * for this function to work\r\n     *\r\n     * @returns {Promise<ILocation>}\r\n     */\r\n    getCurrentLocation(): Promise<ILocation> {\r\n        if (this.bgGeo !== undefined) { // for web usage\r\n            // lower sample count to reduce time taken to get location\r\n            return this.bgGeo.getCurrentPosition({\r\n                timeout: 10, // timeout to fetch location\r\n                maximumAge: 10000, // accept the last-known-location if not older than x ms\r\n                samples: 1,\r\n            }).then((response) => ({\r\n                coords: {\r\n                    latitude: _get(response, 'coords.latitude'),\r\n                    longitude: _get(response, 'coords.longitude'),\r\n                    accuracy: _get(response, 'coords.accuracy'),\r\n                },\r\n            }));\r\n        } else {\r\n            return Promise.resolve({\r\n                coords: {\r\n                    latitude: undefined,\r\n                    longitude: undefined,\r\n                    accuracy: undefined,\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/geolocation/geolocation.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { JobStatus, JobType } from './providers/classes/job';\r\n\r\n/**\r\n * List of menus identifiers in the application\r\n *\r\n * @enum {string}\r\n */\r\nexport enum MenuName {\r\n    AllJobs = 'allJobsMenu',\r\n}\r\n\r\n/**\r\n * Key used for key-value pairs in local storage\r\n *\r\n * @enum {string}\r\n */\r\nexport enum StorageKey {\r\n    Eula = 'eula',\r\n    Url = 'url',\r\n    Username = 'username',\r\n    ApiToken = 'token',\r\n    PreviousJobsInfo = 'previousJobsInfo',\r\n}\r\n\r\n/**\r\n * The source of input for items handled page\r\n *\r\n * @enum {number}\r\n */\r\nexport enum ItemInputMethod {\r\n    Keyboard,\r\n    Barcode,\r\n}\r\n\r\n/**\r\n * Key-value pairing for text and color\r\n *\r\n * @interface IColorPair\r\n */\r\ninterface IColorPair {\r\n    color: string;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * Application-wide configuration / settings and values.\r\n * Some values need to be defined before compiling.\r\n * Some values may be overwritten by input from server\r\n *\r\n * @class Globals\r\n */\r\nexport class Globals {\r\n    private static defaultUrl = 'https://glsapp.com.sg';\r\n\r\n    private static _url: string = Globals.defaultUrl;\r\n    static get url(): string { return Globals._url; }\r\n    static set url(serverUrl) { Globals._url = serverUrl ? serverUrl.replace(/[\\/\\\\]+$/, '') : ''; } // remove prepended slashes\r\n\r\n    /**\r\n     * `````````````````````````````````````````````\r\n     * These values must be defined before compiling (will not change at run-time)\r\n     *\r\n     * `````````````````````````````````````````````\r\n     */\r\n    static readonly default = {\r\n        url: Globals.defaultUrl,\r\n        apiHeader: 'x-access-token', // header key to pass api token as. required for background tracking\r\n        setApiHeader: true, // set true if append token to normal api requests as well\r\n    };\r\n    static readonly login = {\r\n        page: 'LoginPage',\r\n        image: {\r\n            path: 'assets/images/logo_company.png',\r\n            height: '50px', // specify unit (e.g. px) as well\r\n        },\r\n    };\r\n    static readonly home = {\r\n        page: 'HomePage',\r\n        title: 'GLS', // html tags allowed\r\n    };\r\n    static readonly features = {\r\n        forceAppUpdate: true,\r\n        /**\r\n         * GUI\r\n         */\r\n        showEula: false,\r\n        showChangeUrl: false, // allow server url to be modified by drivers. if false, defaultUrl must be specified\r\n        showAllJobsMenu: true,\r\n        showPodPhotoTab: true,\r\n        showChangePassword: true,\r\n        showChangeDriverInfo: true, // change driver / vehicle information\r\n        showJobsMail: true, // message to planner\r\n        showJobsReorderBtn: false, // allow driver to reorder jobs in all jobs page (incomplete feature)\r\n        /**\r\n         * Major features\r\n         */\r\n        enableSSLPinning: true, // if true, showChangeUrl MUST be false\r\n        enableWebsocket: true,\r\n        enableGeoTracking: true,\r\n        enableOfflineSync: true,\r\n    };\r\n\r\n    /**\r\n     * `````````````````````````````````````````````\r\n     * These values may be overwritten at run-time.\r\n     * Some of these values can be defined in the server's setting file.\r\n     * If not defined in server's setting file, the value here will be used\r\n     *\r\n     * `````````````````````````````````````````````\r\n     */\r\n    static readonly user = {\r\n        username: '',\r\n        token: '',\r\n        previousJobsInfo: '',\r\n        vehicleId: '',\r\n        vehiclePlateNumber : '',\r\n        vehicleUserGroup: '',\r\n    };\r\n    /**\r\n     * TODO: Change [status: string] to [status: JobStatus] and [jobtype: string] to [jobtype: JobType] when fixed\r\n     * https://github.com/Microsoft/TypeScript/issues/13042\r\n     */\r\n    static readonly jobStatusPair: { [status: string]: IColorPair } = {\r\n        [JobStatus.Pending]: { title: 'Pending', color: 'blue' },\r\n        [JobStatus.Late]: { title: 'Late', color: 'orange' },\r\n        [JobStatus.Ontime]: { title: 'Ontime', color: 'green' },\r\n        [JobStatus.Unsuccessful]: { title: 'Unsuccessful', color: 'red' },\r\n        [JobStatus.ExpectToBeLate]: { title: 'Expect Late', color: 'purple' },\r\n    };\r\n    static readonly jobTypePair: { [jobtype: string]: IColorPair } = {\r\n        [JobType.Pickup]: { title: 'PICKUP', color: 'orange' },\r\n        [JobType.Delivery]: { title: 'DELIVERY', color: 'blue' },\r\n    };\r\n    static setting = {\r\n        note: {\r\n            maxNumPhoto: 3,\r\n            optionRequired: false,\r\n            options: [\r\n                'No problem',\r\n                'Incomplete order',\r\n                'Customer unavailable',\r\n                'Damaged product',\r\n            ],\r\n        },\r\n        pod: {\r\n            photoRequired: false,\r\n        },\r\n        item: {\r\n            defaultInput: ItemInputMethod.Keyboard,\r\n            allowSwitchInput: true,\r\n            acceptedCodes: 'DATA_MATRIX,UPC_A,UPC_E,EAN_8,EAN_13,CODE_39,CODE_128,ITF', // https://github.com/phonegap/phonegap-plugin-barcodescanner#using-the-plugin\r\n        },\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/globals.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client/dist/socket.io';\r\n\r\nimport { Globals } from '../../globals';\r\n\r\n/**\r\n * Possible values for purpose of a websocket message received\r\n *\r\n * @enum {string}\r\n */\r\nexport enum WebsocketPurpose {\r\n    Create = 'create',\r\n    Update = 'update',\r\n    Delete = 'delete',\r\n    Attempted = 'attempted',\r\n}\r\n\r\n/**\r\n * Possible values for event of a websocket message received\r\n *\r\n * @enum {string}\r\n */\r\nexport enum WebsocketEvent {\r\n    DeliveryMaster = 'DeliveryMaster',\r\n    DeliveryDetail = 'DeliveryDetail',\r\n    DeliveryItem = 'DeliveryItem',\r\n    DeliveryPlan = 'DeliveryPlan',\r\n    Vehicle = 'Vehicle',\r\n    Logout = 'logout',\r\n}\r\n\r\n@Injectable()\r\nexport class WebsocketProvider {\r\n    private socket: SocketIOClient.Socket;\r\n\r\n    private eventsToCreate: { name: WebsocketEvent, successFn: Function, errorFn: Function }[] = []; // list of events to create when socket is ready\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * Establish websocket connection to the server\r\n     */\r\n    connect(): void {\r\n        if (Globals.features.enableWebsocket === false) {\r\n            // ignore subsequent codes if feature is not enabled\r\n            return;\r\n\r\n        } else if (this.socket !== undefined && this.socket.connected === true) {\r\n            console.log(`[WEBSOCKET] Already connected to websocket`);\r\n\r\n        } else {\r\n            let serverUrl = Globals.url;\r\n            if (Globals.default.setApiHeader) {\r\n                serverUrl += `?${Globals.default.apiHeader}=${Globals.user.token}`;\r\n            }\r\n\r\n            console.log(`[WEBSOCKET] Connecting to ${serverUrl}`);\r\n            this.socket = io(serverUrl); // needs to be here instead of constructor in case url changes\r\n\r\n            if (this.eventsToCreate.length) {\r\n                this.eventsToCreate.forEach((event) => this.onJSON(event.name, event.successFn, event.errorFn));\r\n                this.eventsToCreate = [];\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect websocket connectivity\r\n     */\r\n    disconnect(): void {\r\n        if (Globals.features.enableWebsocket === false) {\r\n            // ignore subsequent codes if feature is not enabled\r\n            return;\r\n\r\n        } else if (this.socket !== undefined && this.socket.connected === true) {\r\n            // remove listener is not required because connection will be disconnected\r\n            this.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Listen to a websocket event\r\n     *\r\n     * @param {WebsocketEvent} eventName  Name of event to listen\r\n     * @param {Function} successCallback  Callback when a message is received\r\n     * @param {Function} [errorCallback]  Callback when an error is received\r\n     */\r\n    onJSON(eventName: WebsocketEvent, successCallback: Function, errorCallback?: Function): void {\r\n        // https://stackoverflow.com/questions/32875824/socket-io-how-to-replace-event-listener-on-client\r\n        // check if an event has listener (does not allow same topics to be listened more than once)\r\n        if (Globals.features.enableWebsocket === false || this.socket.hasListeners(eventName)) {\r\n            // ignore subsequent codes if feature is not enabled\r\n            return;\r\n\r\n        } else if (!this.socket) {\r\n            // handles scenario where this function is called before socket is initialised\r\n            this.eventsToCreate.push({ name: eventName, successFn: successCallback, errorFn: errorCallback });\r\n\r\n        } else {\r\n            this.socket.on(eventName, (msgStr: string) => {\r\n                try {\r\n                    const msg = JSON.parse(msgStr);\r\n                    console.log(`[WEBSOCKET] Event: (${eventName}). Message:`, msg);\r\n                    if (successCallback) { successCallback(msg); }\r\n                } catch (err) {\r\n                    console.log(`[WEBSOCKET] Event: (${eventName}). Message:`, msgStr, err);\r\n                    if (errorCallback) { errorCallback(err); }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/websocket/websocket.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { HTTP } from '@ionic-native/http';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Globals } from '../../globals';\r\nimport { AuthProvider } from '../user/auth';\r\nimport { Network } from '@ionic-native/network';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n/**\r\n * Supported HTTP methods by this interceptor\r\n *\r\n * @enum IHTTPMethod\r\n */\r\nenum HTTPMethod {\r\n    GET = 'get',\r\n    POST = 'post',\r\n    PUT = 'put',\r\n}\r\n\r\n// interceptor to prepend server url\r\n@Injectable()\r\nexport class NativeHTTP extends HTTP {\r\n    private useNativeHttp: boolean = false;\r\n\r\n    constructor(\r\n        public http: HttpClient,\r\n        public injector: Injector,\r\n        public network: Network,\r\n        public platform: Platform,\r\n    ) {\r\n        super();\r\n\r\n        // use HttpClient if on browser and native HTTP if on mobile platform\r\n        // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/108\r\n        this.useNativeHttp = (this.platform.is('ios') || this.platform.is('android'));\r\n\r\n        console.log(`[API] Using Native HTTP ${this.useNativeHttp}`);\r\n    }\r\n\r\n    get(url: string, parameters: any = {}, headers: any = {}): Promise<any> {\r\n        return this.sendRequestToServer(HTTPMethod.GET, [url, parameters, headers]);\r\n    }\r\n\r\n    post(url: string, body: any, headers: any = {}): Promise<any> {\r\n        return this.sendRequestToServer(HTTPMethod.POST, [url, body, headers]);\r\n    }\r\n\r\n    put(url: string, body: any, headers: any = {}): Promise<any> {\r\n        return this.sendRequestToServer(HTTPMethod.PUT, [url, body, headers]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param method  HTTP method to call\r\n     * @param args  Arguments to pass into `method`. First element is always `url`.\r\n     * @returns {Promise<any>}\r\n     */\r\n    sendRequestToServer(httpMethod: HTTPMethod, args: any[]): Promise<any> {\r\n        const serverUrl = Globals.url;\r\n        const originalUrl = args[0];\r\n        const body = args[1] || {};\r\n        let headers = args[2] || {};\r\n\r\n        // set auth header only if indicated in globals file\r\n        if (Globals.default.setApiHeader === true) {\r\n            headers = { [Globals.default.apiHeader]: Globals.user.token };\r\n        }\r\n\r\n        // set correct url\r\n        const url = `${serverUrl}/${originalUrl}`;\r\n\r\n        console.log(`[API] Sending request to ${url}`, body, headers);\r\n\r\n        if (this.network.type === 'none') {\r\n            return Promise.reject({ error: 'Internet is required.' });\r\n        }\r\n\r\n        let promise: Promise<any>;\r\n        if (this.useNativeHttp) {\r\n            promise = super[httpMethod](url, body, headers);\r\n        } else {\r\n            const options = { withCredentials: true, headers: headers };\r\n            // this section of codes can remove only when issue is resolved\r\n            // @see https://github.com/silkimen/cordova-plugin-advanced-http/issues/108\r\n            if (httpMethod === HTTPMethod.GET) {\r\n                promise = this.http.get(url, Object.assign({ params: body }, options)).toPromise();\r\n            } else {\r\n                promise = this.http[httpMethod.toString()](url, body, options).toPromise();\r\n            }\r\n        }\r\n\r\n        return promise.then((response) => {\r\n            console.log(`[API] Success ${url}`, response);\r\n            try {\r\n                return JSON.parse(response.data);\r\n            } catch (e) {\r\n                return response;\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`[API] Error ${url}`, err);\r\n\r\n            if (this.useNativeHttp) {\r\n                try {\r\n                    err.error = JSON.parse(err.error);\r\n                } catch (e) { }\r\n            } else {\r\n                err.status = -1;\r\n            }\r\n\r\n            if (err.status === 401) {\r\n                const auth = this.injector.get(AuthProvider); // injected here to prevent cyclic DI error\r\n                auth.logout(); // force logout\r\n            }\r\n            throw err;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/driver-rest/native-http.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { App, NavController, NavOptions, Platform, Tabs, Tab } from 'ionic-angular';\r\nimport { get as _get } from 'lodash-es';\r\n\r\nimport { Globals } from '../../globals';\r\n\r\n/**\r\n * Arguments required to initialise constructor\r\n *\r\n * @interface INavigationArgs\r\n */\r\ninterface INavigationArgs {\r\n    app?: App;\r\n    navCtrl?: NavController;\r\n    platform?: Platform;\r\n}\r\n\r\n/**\r\n * This class handles all general navigation events, such as page navigation,\r\n * tab navigation and hardware back button navigation.\r\n *\r\n * For normal pages,\r\n *  - `NavController` is required for page navigation\r\n *  - `App` is not necessary\r\n *\r\n * For tabs,\r\n *  - `NavController` is required for tab navigation\r\n *  - `App` is required for page navigation\r\n *\r\n * `platform` is required to use any hardware back button related functions\r\n *\r\n * @abstract\r\n * @class NavigationProvider\r\n * @example\r\n *  ```\r\n *  class HomePage extends NavigationProvider {\r\n *      constructor(\r\n *          public app: App,\r\n *          public navCtrl: NavController,\r\n *          public platform: Platform\r\n *      ) {\r\n *          super({ app: app, navCtrl: navCtrl, platform: platform });\r\n *      }\r\n *  }\r\n *  ```\r\n */\r\nexport abstract class NavigationProvider {\r\n    private readonly navOptions: NavOptions = { animate: false, updateUrl: false };\r\n\r\n    // private variables to prevent overwriting existing\r\n    private rootNav: NavController;\r\n    private tabsNav: Tabs;\r\n    platform: Platform;\r\n    app: App;\r\n\r\n    constructor(\r\n        init: INavigationArgs,\r\n    ) {\r\n        this.app = init.app;\r\n        this.platform = init.platform;\r\n\r\n        // if NavController object has a parent, then the page is a tab\r\n        if (_get(init.navCtrl, 'parent')) {\r\n            this.tabsNav = init.navCtrl.parent;\r\n        } else {\r\n            this.rootNav = init.navCtrl;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Go to page\r\n     *\r\n     * @param {string} page  Class name of page to go\r\n     * @param {*} [params={}]  Navigation parameters to pass to destination page\r\n     */\r\n    goPage(page: string, params: any = {}): void {\r\n        if (this.canNavigate() === true) {\r\n            this.rootNav.push(page, params, this.navOptions);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return to previous page\r\n     *\r\n     * @param {number} [numPage]  Return to page `numPage` away\r\n     */\r\n    goPreviousPage(numPage: number = 0): void {\r\n        if (this.canNavigate() === true) {\r\n            if (numPage === 0) {\r\n                this.rootNav.pop(this.navOptions);\r\n            } else {\r\n                // as of 28 march 2018 popTo('page') does not work\r\n                this.rootNav.popTo(this.rootNav.getByIndex(this.rootNav.length() - numPage), this.navOptions);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set home page as root. Home page is defined in `homePage` variable\r\n     *\r\n     * @param {*} [params={}]  Navigation parameters to pass to home page\r\n     */\r\n    goHomePage(params: any = {}): void {\r\n        if (this.canNavigate() === true) {\r\n            console.log(`[NAVIGATION] Going to ${Globals.home.page}`);\r\n            this.rootNav.setRoot(Globals.home.page, params, this.navOptions);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set login page as root. Login page is defined in `loginPage` variable\r\n     *\r\n     * @param {*} [params={}]  Navigation parameters to pass to login page\r\n     */\r\n    goLoginPage(params: any = {}): void {\r\n        if (this.canNavigate() === true) {\r\n            console.log(`[NAVIGATION] Going to ${Globals.login.page}`);\r\n            this.rootNav.setRoot(Globals.login.page, params, this.navOptions);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exit application\r\n     */\r\n    exitApp(): void {\r\n        this.platform.exitApp();\r\n    }\r\n\r\n    /**\r\n     * Overwrite hardware back button event. Don't provide `onPressed` to disable back\r\n     * button entirely\r\n     *\r\n     * @param {Function} [onPressed=() => { }]  Callback function when back button is pressed\r\n     * @returns {Function}  Function to unregister event\r\n     */\r\n    overwriteBackBtnEvent(onPressed: Function = () => { }): Function {\r\n        if (this.platform) {\r\n            return this.platform.registerBackButtonAction(onPressed, 10);\r\n        } else {\r\n            console.log('[WARN] platform is not initialised. Failed to disable back button.');\r\n            return () => { };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Go to the next sibiling tab\r\n     */\r\n    goNextTab(): boolean {\r\n        if ((this.tabsNav instanceof Tabs)) {\r\n            const nextTab: Tab = this.tabsNav.getByIndex(this.tabsNav.getSelected().index + 1);\r\n            if (nextTab && nextTab.show) {\r\n                nextTab.enabled = true;\r\n                this.tabsNav.select(nextTab, this.navOptions);\r\n                return true;\r\n            }\r\n        } else {\r\n            console.log('[WARN] There is no tab to navigate to. Failed to go next tab.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether page navigation is allowed\r\n     *\r\n     * @private\r\n     * @returns {boolean}  True if page navigation is allowed\r\n     */\r\n    private canNavigate(): boolean {\r\n        if (!this.rootNav && _get(this.app, 'getRootNav')) {\r\n            // this needs to be initialised here because app may not be initialised when first passed into constructor\r\n            this.rootNav = this.app.getRootNav();\r\n        }\r\n        return this.rootNav ? true : false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/navigation/navigation.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { LoadingController, Loading, Platform } from 'ionic-angular';\r\nimport { NavigationProvider } from '../navigation/navigation';\r\n\r\n@Injectable()\r\nexport class LoadingProvider extends NavigationProvider {\r\n    constructor(\r\n        public loadingCtrl: LoadingController,\r\n        public platform: Platform,\r\n    ) {\r\n        super({ platform: platform });\r\n    }\r\n\r\n    /**\r\n     * Show loader and disable back button while showing. Dismiss must be called manually.\r\n     *\r\n     * @param {string} [msg='Please wait']  Custom message to describe loader (if any)\r\n     * @returns {Loading}\r\n     */\r\n    show(msg: string = 'Please wait'): Loading {\r\n        const loader = this.loadingCtrl.create({ content: `${msg}...` });\r\n        let btnBackEvent: Function = () => { };\r\n        loader.willEnter.subscribe(() => btnBackEvent = this.overwriteBackBtnEvent());\r\n        loader.onDidDismiss(() => btnBackEvent());\r\n        loader.present();\r\n        return loader;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/loading/loading.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 557;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 557\n// module chunks = 26","var map = {\n\t\"../pages/all-jobs/all-jobs.module\": [\n\t\t1087,\n\t\t25\n\t],\n\t\"../pages/all-jobs/next-day-jobs/next-day-jobs.module\": [\n\t\t1088,\n\t\t24\n\t],\n\t\"../pages/all-jobs/planner-notes/planner-notes.module\": [\n\t\t1089,\n\t\t23\n\t],\n\t\"../pages/app-permission/app-permission.module\": [\n\t\t1090,\n\t\t22\n\t],\n\t\"../pages/complete-job-details/complete-job-details.module\": [\n\t\t1091,\n\t\t21\n\t],\n\t\"../pages/current-job/add-note/add-note.module\": [\n\t\t1092,\n\t\t20\n\t],\n\t\"../pages/current-job/current-job.module\": [\n\t\t1093,\n\t\t19\n\t],\n\t\"../pages/current-job/items-handled/items-handled.module\": [\n\t\t1094,\n\t\t18\n\t],\n\t\"../pages/current-job/pod/pod-photo/pod-photo.module\": [\n\t\t1095,\n\t\t17\n\t],\n\t\"../pages/current-job/pod/pod-signature/pod-signature.module\": [\n\t\t1096,\n\t\t0\n\t],\n\t\"../pages/current-job/pod/pod.module\": [\n\t\t1097,\n\t\t16\n\t],\n\t\"../pages/current-job/pod/verify-code/verify-code.module\": [\n\t\t1098,\n\t\t15\n\t],\n\t\"../pages/current-job/summary/summary.module\": [\n\t\t1101,\n\t\t14\n\t],\n\t\"../pages/customer-service/customer-service.module\": [\n\t\t1099,\n\t\t13\n\t],\n\t\"../pages/home/home.module\": [\n\t\t1100,\n\t\t12\n\t],\n\t\"../pages/item-details/item-details.module\": [\n\t\t1102,\n\t\t11\n\t],\n\t\"../pages/login/check-app-version/check-app-version.module\": [\n\t\t1103,\n\t\t10\n\t],\n\t\"../pages/login/licence-agreement/licence-agreement.module\": [\n\t\t1104,\n\t\t9\n\t],\n\t\"../pages/login/login.module\": [\n\t\t1105,\n\t\t8\n\t],\n\t\"../pages/login/scan-server-url/scan-server-url.module\": [\n\t\t1106,\n\t\t7\n\t],\n\t\"../pages/settings/change-driver-details/change-driver-details.module\": [\n\t\t1107,\n\t\t6\n\t],\n\t\"../pages/settings/logout/logout.module\": [\n\t\t1108,\n\t\t5\n\t],\n\t\"../pages/settings/offline-job-modal/offline-job-modal.module\": [\n\t\t1109,\n\t\t4\n\t],\n\t\"../pages/settings/offline-sync/offline-sync.module\": [\n\t\t1110,\n\t\t3\n\t],\n\t\"../pages/settings/reset-password/reset-password.module\": [\n\t\t1111,\n\t\t1\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t1112,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 603;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 603\n// module chunks = 26","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { trim as _trim } from 'lodash-es';\r\n\r\n/**\r\n * Possible key values for driver's note\r\n *\r\n * @enum {string}\r\n */\r\nexport enum DriverNoteKey {\r\n    Option = 'Template',\r\n    FreeText = 'Comments',\r\n    InputMethod = 'Input Items By',\r\n    CurrentPosition = 'ActualDeliveryLocation',\r\n}\r\n\r\n/**\r\n * Represents each note object in Note column of each job\r\n *\r\n * @class Note\r\n */\r\nexport class Note {\r\n    private _key: DriverNoteKey;\r\n    private _value: any;\r\n\r\n    constructor(init?: Partial<Note>) {\r\n        Object.assign(this, init);\r\n    }\r\n\r\n    get key(): DriverNoteKey { return this._key; }\r\n    set key(key) { this._key = key; }\r\n\r\n    get value(): any { return this._value; }\r\n    set value(val) {\r\n        if (typeof val === 'string') {\r\n            val = _trim(val).replace(/(\\r\\n|\\n|\\r)/gm, '. '); // removes newlines\r\n        }\r\n        this._value = val;\r\n    }\r\n\r\n    /**\r\n     * Returns an object without private properties\r\n     *\r\n     * @returns {*}  JSON object\r\n     */\r\n    toJSON(): any {\r\n        return { key: this._key, value: this.value };\r\n    }\r\n\r\n    /**\r\n     * Returns note in string format '<%_KEY_%>:<%_VALUE_%>'\r\n     *\r\n     * @returns {string}\r\n     */\r\n    toString(): string {\r\n        let valueText = this._value ? this._value : '-';\r\n        if (this.isJson(this._value) === true) {\r\n            valueText = '';\r\n            for (const nestedKey in this._value) {\r\n                valueText += `(${nestedKey}) ${this._value[nestedKey]}. `;\r\n            }\r\n        }\r\n        return `${this._key}: ${valueText}`;\r\n    }\r\n\r\n    private isJson(item): boolean {\r\n        // this function passes tests for Blob, null, Array, strings, numbers\r\n        return item instanceof Object && item.constructor === Object;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/classes/note.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Base64 } from '@ionic-native/base64';\r\nimport { get as _get, trim as _trim } from 'lodash-es';\r\nimport { PointGroup } from 'angular2-signaturepad/signature-pad';\r\nimport { ModalController } from 'ionic-angular';\r\n\r\nimport { AttemptedJob, Job } from '../classes/job';\r\nimport { Note, DriverNoteKey } from '../classes/note';\r\nimport { DiagnosticProvider } from '../diagnostic/diagnostic';\r\nimport { GeolocationProvider } from '../geolocation/geolocation';\r\nimport { UserDriverProvider } from '../user/user-driver';\r\n\r\n/**\r\n * Possible actions that a driver can do for a job\r\n *\r\n * @enum {number}\r\n */\r\nenum CurrentJobAction {\r\n    Success,\r\n    Fail,\r\n}\r\n\r\n@Injectable()\r\nexport class CurrentJobProvider {\r\n    id: number;\r\n    action: CurrentJobAction;\r\n\r\n    inputByBarcode: boolean = false;\r\n    items: { id: number, name: string, expected: number, actual: number, scanned: string[] }[] = [];\r\n\r\n    noteOption: string;\r\n    noteText: string;\r\n    notePhotos: string[] = []; // array of file urls\r\n\r\n    verified: boolean = false;\r\n    podSignature: string; // base64\r\n    podSignatureData: PointGroup[] = []; // temp variable. required because fromDataURL does not work correctly for all devices\r\n    podPhoto: string; // file url\r\n\r\n    constructor(\r\n        public base64: Base64,\r\n        public diagnostic: DiagnosticProvider,\r\n        public driver: UserDriverProvider,\r\n        public geolocation: GeolocationProvider,\r\n        public modalCtrl: ModalController,\r\n    ) { }\r\n\r\n    /**\r\n     * Initialise item list based on current job's item list\r\n     *\r\n     * @param {boolean} [forceClear=false]  Set true to set quantity property as 0, otherwise use existing values\r\n     */\r\n    initItems(forceClear: boolean = false): void {\r\n        const details = this.getDetails();\r\n\r\n        let overwrite = false; // this handles scenario where delivery item changes after user keys in\r\n        if (forceClear === true || this.items.length === 0) {\r\n            this.inputByBarcode = false;\r\n            overwrite = true;\r\n        }\r\n\r\n        this.items = details.DeliveryItems.map(({ Id, ItemId, ItemQty, ActualItemQty }) => {\r\n            let qty = ActualItemQty;\r\n            let scanned = [];\r\n            if (overwrite === false) {\r\n                const prevItem = this.items.find((item) => item.name === ItemId);\r\n                scanned = prevItem ? prevItem.scanned : [];\r\n                qty = prevItem ? prevItem.actual : ActualItemQty;\r\n            }\r\n            return { id: Id, name: ItemId, expected: ItemQty, actual: qty, scanned: scanned };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise notes based on current job's note values\r\n     *\r\n     * @param {boolean} [forceClear=false]  Set true to reset to '' or server's Note value\r\n     */\r\n    initNotes(forceClear: boolean = false): void {\r\n        if (forceClear === true || !(this.noteOption || this.noteText)) {\r\n            const details = this.getDetails();\r\n\r\n            if (details.NoteFromDriver.length > 0) {\r\n                const prevNoteOption = details.NoteFromDriver.find((note) => note.key === DriverNoteKey.Option);\r\n                this.noteOption = _get(prevNoteOption, 'value');\r\n\r\n                const prevNoteText = details.NoteFromDriver.find((note) => note.key === DriverNoteKey.FreeText);\r\n                this.noteText = _get(prevNoteText, 'value');\r\n            }\r\n\r\n            this.notePhotos = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get latest job details from driver provider / model to ensure accuracy. Details\r\n     * may change when the job is in the middle of attempting a job\r\n     *\r\n     * @returns {Job}\r\n     */\r\n    getDetails(): Job {\r\n        if (this.id !== undefined) {\r\n            return this.driver.jobs.find((job) => (job.Id === this.id));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Indicate that attempting job is successful\r\n     *\r\n     * @param {number} jobId  Id of job\r\n     */\r\n    setSuccess(jobId: number): void {\r\n        this.id = jobId;\r\n        this.action = (this.action) ? this.action : CurrentJobAction.Success;\r\n    }\r\n\r\n    /**\r\n     * Indicate that attempting job is unsuccessful\r\n     *\r\n     * @param {number} jobId  Id of job\r\n     */\r\n    setFail(jobId: number): void {\r\n        this.id = jobId;\r\n        this.action = (this.action) ? this.action : CurrentJobAction.Fail;\r\n    }\r\n\r\n    /**\r\n     * Whether attempting job is successful\r\n     *\r\n     * @returns {boolean}  True if attempting job is successful\r\n     */\r\n    isSuccess(): boolean {\r\n        return (this.action === CurrentJobAction.Success);\r\n    }\r\n\r\n    /**\r\n     * Sends request to the server for current attempted job\r\n     *\r\n     * @returns {Promise<void>}  Returns error (if any)\r\n     */\r\n    complete(): Promise<void> {\r\n        const job = this.getDetails();\r\n        if (this.isItemsValid(job) === false) {\r\n            return Promise.reject('invalid_items');\r\n\r\n        } else if (this.driver.isPreviousJobComplete(job) === false) {\r\n            return Promise.reject('Please ensure the previous pickup job has been completed first.');\r\n\r\n        } else {\r\n            return this.diagnostic.hasLocationPermission().then((enabled) => {\r\n                if (enabled === true) {\r\n                    return this.constructRequest();\r\n                } else {\r\n                    return new Promise<AttemptedJob>((resolve, reject) => {\r\n                        const modal = this.modalCtrl.create('AppPermissionPage', {}, { enableBackdropDismiss: false });\r\n                        modal.onDidDismiss(() => this.constructRequest().then(resolve).catch(reject));\r\n                        modal.present();\r\n                    });\r\n                }\r\n            }).then((attemptedJob) => {\r\n                return this.driver.jobAttempt(attemptedJob);\r\n            }).then(() => this.reset());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset local variables\r\n     */\r\n    reset(): void {\r\n        this.id = undefined;\r\n        this.action = undefined;\r\n\r\n        this.inputByBarcode = false;\r\n        this.items = [];\r\n\r\n        this.noteOption = undefined;\r\n        this.noteText = undefined;\r\n        this.notePhotos = [];\r\n\r\n        this.verified = false;\r\n        this.podSignature = undefined;\r\n        this.podSignatureData = [];\r\n        this.podPhoto = undefined;\r\n    }\r\n\r\n    /**\r\n     * Get current location and convert current job data into `AttemptedJob` object\r\n     *\r\n     * @private\r\n     * @returns {Promise<AttemptedJob>}\r\n     */\r\n    private constructRequest(): Promise<AttemptedJob> {\r\n        console.log('[ATTEMPT] Getting location');\r\n        return Promise.all([\r\n            this.convertPhotosToBase64(),\r\n            this.geolocation.getCurrentLocation().catch(() => { }),\r\n        ]).then((results) => {\r\n            const base64 = results[0];\r\n            const currentPosition = results[1];\r\n            console.log('[ATTEMPT] Current position is', currentPosition);\r\n\r\n            const note = [];\r\n            if (this.noteOption) {\r\n                note.push(new Note({ key: DriverNoteKey.Option, value: this.noteOption }));\r\n            }\r\n\r\n            if (this.noteText) {\r\n                note.push(new Note({ key: DriverNoteKey.FreeText, value: this.noteText }));\r\n            }\r\n\r\n            if (this.isSuccess() === true) {\r\n                note.push(new Note({ key: DriverNoteKey.InputMethod, value: this.inputByBarcode ? 'Barcode' : 'Text' }));\r\n            }\r\n\r\n            if (currentPosition) {\r\n                note.push(new Note({\r\n                    key: DriverNoteKey.CurrentPosition,\r\n                    value: {\r\n                        lat: _get(currentPosition, 'coords.latitude'),\r\n                        lng: _get(currentPosition, 'coords.longitude'),\r\n                        accuracy: _get(currentPosition, 'coords.accuracy'),\r\n                    },\r\n                }));\r\n            }\r\n\r\n            return new AttemptedJob({\r\n                jobId: this.id,\r\n                delivered: this.isSuccess(),\r\n                note: note,\r\n                notePhotosB64: base64.notePhotos,\r\n                items: this.items.map((item) => ({ Id: item.id, ActualItemQty: item.actual })),\r\n                signatureB64: this.podSignature,\r\n                photoB64: base64.podPhoto,\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check whether the current item list is up-to-date (e.g. in case of websocket changes)\r\n     *\r\n     * @private\r\n     * @param {Job} job  Job to validate\r\n     * @returns {boolean}  True if item list is up-to-date\r\n     */\r\n    private isItemsValid(job: Job): boolean {\r\n        if (this.isSuccess() === false) {\r\n            return true; // not delivered, no need to validate\r\n        } else if (this.items.length !== job.DeliveryItems.length) {\r\n            return false; // guaranteed to fail validation\r\n        } else {\r\n            return this.items.every((item) => {\r\n                return !!job.DeliveryItems.find((deliveryItem) => (deliveryItem.Id === item.id && deliveryItem.ItemQty === item.expected)); // if not found = invalid, return false to exit loop\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert current job variables that are stored as file path into base64 string\r\n     *\r\n     * @private\r\n     * @returns {Promise<{ podPhoto: string, notePhotos: string[] }>}\r\n     */\r\n    private convertPhotosToBase64(): Promise<{ podPhoto: string, notePhotos: string[] }> {\r\n        const promises = [this.podPhoto, ...this.notePhotos];\r\n\r\n        return Promise.all(promises.map((fullpath) => this.fileToB64(fullpath))).then((base64) => {\r\n            const [podPhoto, ...notePhotos] = base64;\r\n            return { podPhoto, notePhotos };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get file path on storage and convert file to base64 string\r\n     *\r\n     * @private\r\n     * @param {string} fullpath  File path on storage\r\n     * @returns {Promise<string>}  Base64 string\r\n     */\r\n    private fileToB64(fullpath: string): Promise<string> {\r\n        fullpath = _trim(fullpath);\r\n        if (!fullpath) {\r\n            return Promise.resolve('');\r\n\r\n        } else {\r\n            return this.base64.encodeFile(fullpath).catch((err) => {\r\n                if (err === 'cordova_not_available') {\r\n                    return ''; // for testing on web\r\n                } else {\r\n                    throw err;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/current-job/current-job.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\nimport { BarcodeScanner, BarcodeScannerOptions, BarcodeScanResult } from '@ionic-native/barcode-scanner';\r\nimport { normalizeURL } from 'ionic-angular';\r\nimport { get as _get } from 'lodash-es';\r\n\r\nimport { Globals } from '../../globals';\r\nimport { NotificationProvider } from '../notification/notification';\r\n\r\n@Injectable()\r\nexport class CameraProvider {\r\n    /**\r\n     * Common / universal options to take photo with camera\r\n     *\r\n     * @private\r\n     * @type {CameraOptions}\r\n     */\r\n    private readonly cameraOptions: CameraOptions = {\r\n        quality: 50,\r\n        destinationType: this.camera.DestinationType.FILE_URI,\r\n        encodingType: this.camera.EncodingType.JPEG,\r\n        sourceType: this.camera.PictureSourceType.CAMERA,\r\n        mediaType: this.camera.MediaType.PICTURE,\r\n        allowEdit: true,\r\n        targetWidth: 1200,\r\n        targetHeight: 1200,\r\n        saveToPhotoAlbum: false,\r\n        correctOrientation: true,\r\n    };\r\n\r\n    /**\r\n     * Common / universal options to scan barcodes\r\n     *\r\n     * @private\r\n     * @type {BarcodeScannerOptions}\r\n     */\r\n    private readonly scanOptions: BarcodeScannerOptions = {\r\n        preferFrontCamera: false,\r\n        showFlipCameraButton: true,\r\n        showTorchButton: true,\r\n        torchOn: false,\r\n        disableAnimations: true,\r\n        disableSuccessBeep: true,\r\n        formats: Globals.setting.item.acceptedCodes,\r\n        // Android only\r\n        resultDisplayDuration: 0,\r\n        prompt: 'Press back button to cancel',\r\n    };\r\n\r\n    constructor(\r\n        public camera: Camera,\r\n        public notify: NotificationProvider,\r\n        public scanner: BarcodeScanner,\r\n    ) { }\r\n\r\n    /**\r\n     * Opens view to take one photo. Displays error in toast (if any)\r\n     *\r\n     * @returns {Promise<string>}  Uri path to image on storage\r\n     */\r\n    getPicture(): Promise<string> {\r\n        return this.camera.getPicture(this.cameraOptions).then((fileUri) => {\r\n            return normalizeURL(fileUri);\r\n        }).catch((err) => {\r\n            if (err !== 'No Image Selected' && err !== 'cordova_not_available') {\r\n                this.notify.error(err);\r\n            }\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens view to scan one barcode. Displays error in toast (if any)\r\n     *\r\n     * @param {boolean} [qrOnly=false]  Set true to scan QR code only\r\n     * @returns {Promise<BarcodeScanResult>}\r\n     */\r\n    scanBarcode(qrOnly: boolean = false): Promise<BarcodeScanResult> {\r\n        const formats = qrOnly ? { formats: 'QR_CODE' } : {};\r\n        const options = Object.assign({}, this.scanOptions, formats);\r\n\r\n        return this.scanner.scan(options).then((result) => {\r\n            if (result.cancelled === true) {\r\n                throw new Error('cancelled');\r\n            }\r\n            return result;\r\n        }).catch((err) => {\r\n            if (err.toString() !== 'Error: cancelled') {\r\n                this.notify.error(_get(err, 'text', 'Unable to scan.'));\r\n            }\r\n            throw err;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/camera/camera.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).catch((err) => console.error(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\n\r\nimport { AppVersion } from '@ionic-native/app-version';\r\nimport { BackgroundMode } from '@ionic-native/background-mode';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\nimport { Base64 } from '@ionic-native/base64';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\nimport { HTTP } from '@ionic-native/http';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications';\r\nimport { Network } from '@ionic-native/network';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\r\nimport { SQLite } from '@ionic-native/sqlite';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { AuthProvider } from '../providers/user/auth';\r\nimport { NativeHTTP } from '../providers/driver-rest/native-http';\r\nimport { AuthApi, JobsApi, ItemApi, MailApi, VehicleApi, MiscApi } from '../providers/driver-rest/driver-rest';\r\nimport { CameraProvider } from '../providers/camera/camera';\r\nimport { CurrentJobProvider } from '../providers/current-job/current-job';\r\nimport { DiagnosticProvider } from '../providers/diagnostic/diagnostic';\r\nimport { GeolocationProvider } from '../providers/geolocation/geolocation';\r\nimport { LoadingProvider } from '../providers/loading/loading';\r\nimport { NotificationProvider } from '../providers/notification/notification';\r\nimport { StorageProvider } from '../providers/storage/storage';\r\nimport { UserDriverProvider } from '../providers/user/user-driver';\r\nimport { WebsocketProvider } from '../providers/websocket/websocket';\r\n\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n    return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MyApp,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        IonicModule.forRoot(MyApp, {\r\n            tabsPlacement: 'top',\r\n            tabsHideOnSubPages: true,\r\n            scrollAssist: false,\r\n            autoFocusAssist: false,\r\n            activator: 'highlight',\r\n        }),\r\n    ],\r\n    bootstrap: [IonicApp],\r\n    entryComponents: [\r\n        MyApp,\r\n    ],\r\n    providers: [\r\n        // interceptors\r\n        { provide: ErrorHandler, useClass: IonicErrorHandler },\r\n        // utils\r\n        CameraProvider,\r\n        DiagnosticProvider,\r\n        GeolocationProvider,\r\n        LoadingProvider,\r\n        NotificationProvider,\r\n        StorageProvider,\r\n        WebsocketProvider,\r\n        // http api requests\r\n        NativeHTTP,\r\n        AuthApi,\r\n        ItemApi,\r\n        JobsApi,\r\n        MailApi,\r\n        MiscApi,\r\n        VehicleApi,\r\n        // data service\r\n        AuthProvider,\r\n        CurrentJobProvider,\r\n        UserDriverProvider,\r\n        // native plugins\r\n        AppVersion,\r\n        Camera,\r\n        BackgroundMode,\r\n        BarcodeScanner,\r\n        Base64,\r\n        Diagnostic,\r\n        HTTP,\r\n        Keyboard,\r\n        LaunchNavigator,\r\n        LocalNotifications,\r\n        Network,\r\n        PhotoViewer,\r\n        SQLite,\r\n        StatusBar,\r\n        SplashScreen,\r\n    ],\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts"],"sourceRoot":""}