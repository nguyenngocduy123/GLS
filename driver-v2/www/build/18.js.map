{"version":3,"sources":["../../src/pages/current-job/items-handled/items-handled.module.ts","../../src/components/components.module.ts","../../src/pipes/pipes.module.ts","../../src/pipes/safe/safe.ts","../../src/components/vrp-btn-clear/vrp-btn-clear.ts","../../src/components/vrp-header/vrp-header.ts","../../src/components/vrp-job-details/vrp-job-details.ts","../../src/components/vrp-job-summary/vrp-job-summary.ts","../../src/components/vrp-jobnote-label/vrp-jobnote-label.ts","../../src/components/vrp-jobtype-label/vrp-jobtype-label.ts","../../src/components/vrp-photos/vrp-photos.ts","../../src/components/vrp-progress-bar/vrp-progress-bar.ts","../../src/pages/current-job/items-handled/items-handled.ts"],"names":[],"mappings":"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","file":"18.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { ItemsHandledPage } from './items-handled';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ItemsHandledPage,\r\n    ],\r\n    imports: [\r\n        ComponentsModule,\r\n        IonicPageModule.forChild(ItemsHandledPage),\r\n    ],\r\n})\r\nexport class ItemsHandledPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/current-job/items-handled/items-handled.module.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from 'ionic-angular';\r\n\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { VrpBtnClearComponent } from './vrp-btn-clear/vrp-btn-clear';\r\nimport { VrpHeaderComponent } from './vrp-header/vrp-header';\r\nimport { VrpJobDetailsComponent } from './vrp-job-details/vrp-job-details';\r\nimport { VrpJobSummaryComponent } from './vrp-job-summary/vrp-job-summary';\r\nimport { VrpJobnoteLabelComponent } from './vrp-jobnote-label/vrp-jobnote-label';\r\nimport { VrpJobtypeLabelComponent } from './vrp-jobtype-label/vrp-jobtype-label';\r\nimport { VrpPhotosComponent } from './vrp-photos/vrp-photos';\r\nimport { VrpProgressBarComponent } from './vrp-progress-bar/vrp-progress-bar';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        VrpBtnClearComponent,\r\n        VrpHeaderComponent,\r\n        VrpJobDetailsComponent,\r\n        VrpJobSummaryComponent,\r\n        VrpJobnoteLabelComponent,\r\n        VrpJobtypeLabelComponent,\r\n        VrpPhotosComponent,\r\n        VrpProgressBarComponent,\r\n    ],\r\n    imports: [\r\n        IonicModule,\r\n        PipesModule,\r\n        TranslateModule.forChild(),\r\n    ],\r\n    exports: [\r\n        TranslateModule,\r\n        VrpBtnClearComponent,\r\n        VrpHeaderComponent,\r\n        VrpJobDetailsComponent,\r\n        VrpJobSummaryComponent,\r\n        VrpJobnoteLabelComponent,\r\n        VrpJobtypeLabelComponent,\r\n        VrpPhotosComponent,\r\n        VrpProgressBarComponent,\r\n    ],\r\n})\r\nexport class ComponentsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { SafePipe } from './safe/safe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SafePipe,\r\n    ],\r\n    exports: [\r\n        SafePipe,\r\n    ],\r\n})\r\nexport class PipesModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/pipes.module.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Santizes urls to solve unsafe value exceptions\r\n *\r\n * @class SafePipe\r\n * @implements {PipeTransform}\r\n */\r\n@Pipe({\r\n    name: 'safe',\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n    constructor() { }\r\n\r\n    transform(url) {\r\n        return window['Ionic'].WebView.convertFileSrc(url);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/safe/safe.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { NotificationProvider } from '../../providers/notification/notification';\r\n\r\n/**\r\n * Clear button in pages with form\r\n *\r\n * @class VrpBtnClearComponent\r\n */\r\n@Component({\r\n    selector: 'vrp-btn-clear',\r\n    templateUrl: 'vrp-btn-clear.html',\r\n})\r\nexport class VrpBtnClearComponent {\r\n    /**\r\n     * Callback button when button is pressed\r\n     *\r\n     * @type {EventEmitter<void>}\r\n     */\r\n    @Output() pressed: EventEmitter<void> = new EventEmitter();\r\n\r\n    constructor(\r\n        public notify: NotificationProvider,\r\n    ) { }\r\n\r\n    btnClear() {\r\n        this.pressed.emit();\r\n    }\r\n\r\n    showToast() {\r\n        this.notify.info('Press and hold to clear all input');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-btn-clear/vrp-btn-clear.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { NavController, AlertController } from 'ionic-angular';\r\nimport { NavigationProvider } from '../../providers/navigation/navigation';\r\n\r\n/**\r\n * Header of all pages\r\n *\r\n * @class VrpHeaderComponent\r\n * @extends {NavigationProvider}\r\n */\r\n@Component({\r\n    selector: 'vrp-header',\r\n    templateUrl: 'vrp-header.html',\r\n})\r\nexport class VrpHeaderComponent extends NavigationProvider {\r\n    /**\r\n     * Flag to indicate whether to direct user to login page instead of home page\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    @Input() toLoginPage: boolean = false;\r\n\r\n    /**\r\n     * Flag to indicate whether a confirmation dialog should be shown before redirecting\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    @Input() showDialog: boolean = false;\r\n\r\n    constructor(\r\n        public alertCtrl: AlertController,\r\n        public navCtrl: NavController,\r\n    ) {\r\n        super({ navCtrl: navCtrl });\r\n    }\r\n\r\n    goMainPage() {\r\n        if (this.showDialog === false) {\r\n            this.go();\r\n        } else {\r\n            const alert = this.alertCtrl.create({\r\n                title: 'Confirm',\r\n                subTitle: 'Are you sure you want to go main page?',\r\n                buttons: [\r\n                    {\r\n                        text: 'Cancel',\r\n                        role: 'cancel',\r\n                    }, {\r\n                        text: 'Yes',\r\n                        handler: () => {\r\n                            this.go();\r\n                        },\r\n                    },\r\n                ],\r\n            });\r\n            alert.present();\r\n        }\r\n\r\n    }\r\n\r\n    private go() {\r\n        if (this.toLoginPage === false) {\r\n            this.goHomePage();\r\n        } else {\r\n            this.goLoginPage();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-header/vrp-header.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalController } from 'ionic-angular';\r\n\r\nimport { Job, IDeliveryItem } from '../../providers/classes/job';\r\nimport { LoadingProvider } from '../../providers/loading/loading';\r\n\r\n/**\r\n * Displays all necessary information of a job.\r\n * See `VrpJobSummaryComponent` to show short summary of a job instead\r\n *\r\n * @class VrpJobDetailsComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'vrp-job-details',\r\n    templateUrl: 'vrp-job-details.html',\r\n})\r\nexport class VrpJobDetailsComponent implements OnInit {\r\n    /**\r\n     * Flag to indicate whether to show items section\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    @Input() showItems: boolean = false;\r\n\r\n    /**\r\n     * Job to display\r\n     *\r\n     * @type {Job}\r\n     */\r\n    @Input() job: Job;\r\n\r\n    constructor(\r\n        public loading: LoadingProvider,\r\n        public modalCtrl: ModalController,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        if (this.job === undefined || !(this.job instanceof Job)) {\r\n            throw new Error('Attribute `job` must be an instance of Job.');\r\n        }\r\n    }\r\n\r\n    btnViewItem(item: IDeliveryItem) {\r\n        const loader = this.loading.show('Getting item information');\r\n        const modal = this.modalCtrl.create('ItemDetailsPage', { deliveryItem: item });\r\n        modal.present().then(() => loader.dismiss());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-job-details/vrp-job-details.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Job } from '../../providers/classes/job';\r\n\r\n/**\r\n * Short summary of a job\r\n * See `VrpJobDetailsComponent` to show detailed information of a job\r\n *\r\n * @class VrpJobSummaryComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'vrp-job-summary',\r\n    templateUrl: 'vrp-job-summary.html',\r\n})\r\nexport class VrpJobSummaryComponent implements OnInit {\r\n    /**\r\n     * Job to display\r\n     *\r\n     * @type {Job}\r\n     */\r\n    @Input() job: Job;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        if (this.job === undefined || !(this.job instanceof Job)) {\r\n            throw new Error('Attribute `job` must be an instance of Job.');\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-job-summary/vrp-job-summary.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\n\r\nimport { Note } from '../../providers/classes/note';\r\n\r\n/**\r\n * Standardised way to display Note columns\r\n *\r\n * @class VrpJobnoteLabelComponent\r\n */\r\n@Component({\r\n    selector: 'vrp-jobnote-label',\r\n    templateUrl: 'vrp-jobnote-label.html',\r\n})\r\nexport class VrpJobnoteLabelComponent {\r\n    /**\r\n     * List of notes to display\r\n     *\r\n     * @type {Note[]}\r\n     */\r\n    @Input() notes: Note[];\r\n\r\n    constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-jobnote-label/vrp-jobnote-label.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { Globals } from '../../globals';\r\nimport { JobType } from '../../providers/classes/job';\r\n\r\n/**\r\n * Standardised way to display JobType column\r\n *\r\n * @class VrpJobtypeLabelComponent\r\n * @implements {OnChanges}\r\n */\r\n@Component({\r\n    selector: 'vrp-jobtype-label',\r\n    templateUrl: 'vrp-jobtype-label.html',\r\n})\r\nexport class VrpJobtypeLabelComponent implements OnChanges {\r\n    /**\r\n     * Value of JobType column\r\n     *\r\n     * @type {JobType}\r\n     */\r\n    @Input() jobtype: JobType;\r\n\r\n    text: string;\r\n    color: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnChanges() {\r\n        if (this.jobtype === undefined) {\r\n            throw new Error('Attribute `jobtype` is required.');\r\n        }\r\n\r\n        const jobTypeDictionary = Globals.jobTypePair[this.jobtype];\r\n        this.text = jobTypeDictionary.title;\r\n        this.color = jobTypeDictionary.color;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-jobtype-label/vrp-jobtype-label.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\r\n\r\n/**\r\n * Standardised way to any photos\r\n *\r\n * @class VrpPhotosComponent\r\n * @implements {OnInit}\r\n */\r\n@Component({\r\n    selector: 'vrp-photos',\r\n    templateUrl: 'vrp-photos.html',\r\n})\r\nexport class VrpPhotosComponent implements OnInit {\r\n    /**\r\n     * Photos to display, can be in base64 or storage path.\r\n     * Will be shown as 2 images per row\r\n     *\r\n     * @type {string[]}\r\n     */\r\n    @Input() photos?: string[] = [];\r\n\r\n    /**\r\n     * One photo to display, can be in base64 or storage path\r\n     * Will be shown as 1 image per row\r\n     *\r\n     * @type {string}\r\n     */\r\n    @Input() photo?: string;\r\n\r\n    /**\r\n     * Flag to indicate whether to show remove button\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    @Input() allowRemove: boolean = false;\r\n\r\n    constructor(\r\n        public photoViewer: PhotoViewer,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        if (this.photos === undefined && this.photo === undefined) {\r\n            throw new Error('Either `photos` or `photo` must be provided.');\r\n        } else if (this.photos !== undefined && !Array.isArray(this.photos)) {\r\n            throw new Error('Attribute `photos` must be an array.');\r\n        } else if (this.photo !== undefined && typeof this.photo !== 'string') {\r\n            throw new Error('Attribute `photo` must be a string.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open photoviewer view that allows zooming, panning and sharing\r\n     *\r\n     * @param {string} photo\r\n     */\r\n    btnViewPhoto(photo: string) {\r\n        this.photoViewer.show(photo);\r\n    }\r\n\r\n    btnRemovePhoto(photo: string) {\r\n        const index = this.photos.indexOf(photo, 0);\r\n        if (index > -1) {\r\n            this.photos.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-photos/vrp-photos.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { Globals } from '../../globals';\r\nimport { Job } from '../../providers/classes/job';\r\n\r\n/**\r\n * Progress bar based on job list input\r\n *\r\n * @class VrpProgressBarComponent\r\n * @implements {OnChanges}\r\n */\r\n@Component({\r\n    selector: 'vrp-progress-bar',\r\n    templateUrl: 'vrp-progress-bar.html',\r\n})\r\nexport class VrpProgressBarComponent implements OnChanges {\r\n    /**\r\n     * List of jobs to show progress bar on\r\n     *\r\n     * @type {Job[]}\r\n     */\r\n    @Input() jobs: Job[];\r\n\r\n    showProgress: boolean = false; // to toggle detail view\r\n    summary: object[] = [];\r\n    remainingPercent: number = 100; // used to keep track the calculated percentage to prevent overflow\r\n\r\n    constructor() { }\r\n\r\n    ngOnChanges() {\r\n        if (this.jobs !== undefined && this.jobs.length) {\r\n            if (!(this.jobs[0] instanceof Job)) { // assumes that the entire array consist of same object types\r\n                throw new Error('Attribute `jobs` must be an array of Job instances.');\r\n            }\r\n\r\n            this.reset();\r\n            const jobsByCategory = this.groupBy(this.jobs, 'Status');\r\n\r\n            for (const status in jobsByCategory) {\r\n                const jobs = jobsByCategory[status];\r\n                const statusDictionary = Globals.jobStatusPair[status];\r\n\r\n                this.summary.push({\r\n                    title: statusDictionary.title,\r\n                    color: statusDictionary.color,\r\n                    count: jobs.length,\r\n                    percent: this.calPercent(jobs.length),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleLegend() {\r\n        this.showProgress = !(this.showProgress);\r\n    }\r\n\r\n    private reset() {\r\n        this.showProgress = false;\r\n        this.summary = [];\r\n        this.remainingPercent = 100;\r\n    }\r\n\r\n    private groupBy(arr, key) {\r\n        // codes from https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_groupby\r\n        return arr.reduce((r, v, _i, _a, k = v[key]) => ((r[k] || (r[k] = [])).push(v), r), {});\r\n    }\r\n\r\n    private calPercent(count) {\r\n        const percent = Math.ceil(count / this.jobs.length * 100);\r\n\r\n        if (percent < this.remainingPercent) {\r\n            this.remainingPercent = this.remainingPercent - percent;\r\n            return percent;\r\n        } else {\r\n            return this.remainingPercent;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/vrp-progress-bar/vrp-progress-bar.ts","/**\r\n * @license\r\n * Copyright Singapore Institute of Manufacturing Technology (SIMTech). All Rights Reserved.\r\n *\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, Platform, AlertController } from 'ionic-angular';\r\n\r\nimport { Globals, ItemInputMethod } from '../../../globals';\r\nimport { CameraProvider } from '../../../providers/camera/camera';\r\nimport { CurrentJobProvider } from '../../../providers/current-job/current-job';\r\nimport { Job } from '../../../providers/classes/job';\r\nimport { NotificationProvider } from '../../../providers/notification/notification';\r\nimport { NavigationProvider } from '../../../providers/navigation/navigation';\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-items-handled',\r\n    templateUrl: 'items-handled.html',\r\n})\r\nexport class ItemsHandledPage extends NavigationProvider {\r\n    private btnBackEvent: Function;\r\n\r\n    inputType: ItemInputMethod = Globals.setting.item.defaultInput;\r\n    allowSwitchInput: boolean = Globals.setting.item.allowSwitchInput;\r\n\r\n    job: Job;\r\n    inputByKeyboard: boolean = (this.inputType === ItemInputMethod.Keyboard);\r\n\r\n    constructor(\r\n        public alertCtrl: AlertController,\r\n        public camera: CameraProvider,\r\n        public currentJob: CurrentJobProvider,\r\n        public navCtrl: NavController,\r\n        public notify: NotificationProvider,\r\n        public platform: Platform,\r\n    ) {\r\n        super({ navCtrl: navCtrl, platform: platform });\r\n    }\r\n\r\n    ionViewCanEnter() {\r\n        this.job = this.currentJob.getDetails();\r\n        if (!(this.job instanceof Job)) {\r\n            setTimeout(() => this.goHomePage());\r\n            return false;\r\n        }\r\n\r\n        // items need to init manually to prevent overwriting of original values\r\n        // it's also to ensure that the items data is up-to-date\r\n        this.currentJob.initItems();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        this.btnBackEvent = this.overwriteBackBtnEvent(() => {\r\n            const alert = this.alertCtrl.create({\r\n                title: 'Confirm',\r\n                subTitle: 'Are you sure you want to go back to previous page?',\r\n                buttons: [\r\n                    {\r\n                        text: 'Cancel',\r\n                        role: 'cancel',\r\n                    }, {\r\n                        text: 'Yes',\r\n                        handler: () => {\r\n                            this.goPreviousPage();\r\n                        },\r\n                    },\r\n                ],\r\n            });\r\n            alert.present();\r\n        });\r\n    }\r\n\r\n    ionViewDidLeave() {\r\n        this.btnBackEvent();\r\n    }\r\n\r\n    switchInput() {\r\n        if (this.allowSwitchInput === true) {\r\n            // toggle input type\r\n            this.inputType = (this.inputType === ItemInputMethod.Keyboard) ? ItemInputMethod.Barcode : ItemInputMethod.Keyboard;\r\n            this.inputByKeyboard = (this.inputType === ItemInputMethod.Keyboard);\r\n\r\n            // clear all input\r\n            this.btnClear();\r\n\r\n            // indicate input is by barcode or not\r\n            this.currentJob.inputByBarcode = (this.inputType === ItemInputMethod.Barcode);\r\n        } else {\r\n            this.notify.error('You are not allowed to change input method.');\r\n        }\r\n    }\r\n\r\n    notifySwitch() {\r\n        this.notify.info('Existing input will be cleared. Press and hold button to confirm switch.');\r\n    }\r\n\r\n    btnConfirm() {\r\n        // TODO: check if can use FormBuilder to handle this\r\n        const hasValidItems = this.currentJob.items.find((item) => item.actual > 0);\r\n        if (hasValidItems) {\r\n            this.goPage('AddNotePage');\r\n        } else {\r\n            this.notify.error('At least 1 item must have quantity more than 0.');\r\n        }\r\n    }\r\n\r\n    btnScan(item) {\r\n        this.camera.scanBarcode().then((scanned) => {\r\n            const code = scanned.text;\r\n\r\n            if (item.scanned.indexOf(code) > -1) {\r\n                this.notify.info('Barcode has been scanned before');\r\n            } else {\r\n                item.scanned.push(scanned.text);\r\n                item.actual = (item.actual || 0) + 1;\r\n            }\r\n        }).catch(() => { });\r\n    }\r\n\r\n    btnClear() {\r\n        this.currentJob.initItems(true);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/current-job/items-handled/items-handled.ts"],"sourceRoot":""}