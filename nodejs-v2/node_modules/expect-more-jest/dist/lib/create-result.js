"use strict";
exports.__esModule = true;
var chalk_1 = require("chalk");
var jest_matcher_utils_1 = require("jest-matcher-utils");
exports.createResult = function (_a) {
    var pass = _a.pass, message = _a.message, notMessage = _a.notMessage;
    return ({
        message: function () { return (pass ? notMessage() : message()).trim(); },
        pass: pass
    });
};
exports.createToHandleComparer = function (matcherName, createGenerator) { return function (fn, shape) {
    var generator = createGenerator(shape);
    var result = generator.assert(fn);
    var message = function (hint, permutation, error) { return "\n  " + hint + "\n\n  When called with:\n    " + permutation + "\n\n  Throws:\n    " + error + "\n  "; };
    var notMessage = function (hint, msg) { return "\n  " + hint + "\n\n  " + msg + "\n  "; };
    return exports.createResult({
        message: function () {
            return message(jest_matcher_utils_1.matcherHint("." + matcherName, "Function " + fn.name), jest_matcher_utils_1.printExpected(result.permutation), chalk_1["default"].red(result.error.stack));
        },
        notMessage: function () {
            return notMessage(jest_matcher_utils_1.matcherHint(".not." + matcherName, "Function " + fn.name), chalk_1["default"].red('No Error was thrown'));
        },
        pass: result.pass
    });
}; };
