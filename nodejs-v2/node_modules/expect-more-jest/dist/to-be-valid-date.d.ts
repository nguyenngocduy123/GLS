declare global {
    namespace jest {
        interface Expect {
            /**
             * Asserts that a value is an instance of `Date` whose _value_ is valid. `Date` is little like `Promise` in that
             * it is a container for a value. `new Date('wut?')` for example, is a valid `Date` which wraps a value which is
             * _not_ valid.
             * @example
             * expect(onPress).toHaveBeenCalledWith(
             *   expect.objectContaining({
             *     releaseDate: expect.toBeValidDate()
             *   })
             * );
             */
            toBeValidDate<T>(): Matchers<T>;
        }
        interface Matchers<R> {
            /**
             * Asserts that a value is an instance of `Date` whose _value_ is valid. `Date` is little like `Promise` in that
             * it is a container for a value. `new Date('wut?')` for example, is a valid `Date` which wraps a value which is
             * _not_ valid.
             * @example
             * expect(game.releaseDate).toBeValidDate();
             */
            toBeValidDate(): R;
        }
    }
}
export declare const toBeValidDateMatcher: (received: any) => {
    message: () => string;
    pass: boolean;
};
