import { ICurry2Args, ICurry3Args, VoidFn } from './typings';
export declare const isArray: (value: any) => boolean;
export declare const isBoolean: (value: any) => boolean;
export declare const isDate: (value: any) => boolean;
export declare const isFunction: (value: any) => boolean;
export declare const isNull: (value: any) => boolean;
export declare const isObject: (value: any) => boolean;
export declare const isRegExp: (value: any) => boolean;
export declare const isString: (value: any) => boolean;
export declare const isUndefined: (value: any) => boolean;
export declare const isWalkable: (value: any) => boolean;
export declare const isAfter: ICurry2Args<Date, any, boolean>;
export declare const isFalse: (value: any) => boolean;
export declare const isTrue: (value: any) => boolean;
export declare const isBefore: ICurry2Args<Date, any, boolean>;
export declare const isNumber: (value: any) => boolean;
export declare const isDivisibleBy: ICurry2Args<number, any, boolean>;
export declare const isEvenNumber: (value: any) => boolean;
export declare const isOddNumber: (value: any) => boolean;
export declare const isWholeNumber: (value: any) => boolean;
export declare const isDecimalNumber: (value: any) => boolean;
export declare const isCalculable: (value: any) => boolean;
export declare const isGreaterThanOrEqualTo: ICurry2Args<number, any, boolean>;
export declare const isLessThanOrEqualTo: ICurry2Args<number, any, boolean>;
export declare const isWithinRange: ICurry3Args<number, number, any, boolean>;
export declare const isNear: ICurry3Args<number, number, any, boolean>;
export declare const isArrayOfBooleans: (value: any) => boolean;
export declare const isArrayOfNumbers: (value: any) => boolean;
export declare const isArrayOfObjects: (value: any) => boolean;
export declare const isArrayOfStrings: (value: any) => boolean;
export declare const isArrayOfSize: ICurry2Args<number, any, boolean>;
export declare const isEmptyArray: import("./typings").ICurry1Arg<any, boolean>;
export declare const isEmptyObject: (value: any) => boolean;
export declare const isEmptyString: (value: any) => boolean;
export declare const isValidDate: (value: any) => boolean;
export declare const isWhitespace: (value: any) => boolean;
export declare const startsWith: ICurry2Args<string, any, boolean>;
export declare const endsWith: ICurry2Args<string, any, boolean>;
export declare const isNonEmptyArray: (value: any) => boolean;
export declare const isNonEmptyObject: (value: any) => boolean;
export declare const isNonEmptyString: (value: any) => boolean;
export declare const isSameLengthAs: ICurry2Args<string | any[], any, boolean>;
export declare const isShorterThan: ICurry2Args<string | any[], any, boolean>;
export declare const isLongerThan: ICurry2Args<string | any[], any, boolean>;
export declare const hasMember: ICurry2Args<string, any, boolean>;
export declare const isIso8601: (value: any) => boolean;
export declare const isJsonString: (value: any) => boolean;
export declare const throwsAnyError: (value: VoidFn) => boolean;
export declare const throwsErrorOfType: ICurry2Args<string, VoidFn, boolean>;
